<?xml version="1.0" encoding="UTF-8"?>
<!--
 Licensed Materials - Property of IBM

 IBM Cognos Products: fmmd

 (C) Copyright IBM Corp. 2003, 2010

 US Government Users Restricted Rights - Use, duplication or disclosure
 restricted by GSA ADP Schedule Contract with IBM Corp.
-->
<!--
    Copyright (C) 2008 Cognos ULC, an IBM Company. All rights reserved.
    Cognos (R) is a trademark of Cognos ULC, (formerly Cognos Incorporated).
-->
<!--xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified"-->
<xsd:schema xmlns:fmsdk="http://www.developer.cognos.com/schemas/fmsdk/1/0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.developer.cognos.com/schemas/fmsdk/1/0" elementFormDefault="qualified" attributeFormDefault="unqualified">
<xsd:annotation>
<xsd:documentation>
<para>This section contains information to assist users in building action log scripts that can be executed either by the Framework Manager (FM) Software Developer Kit (SDK) or directly in Framework Manager.</para>
<para>Action log files do not conform directly to this specification (mdActions.xsd). There is, however, a direct one-to-one mapping between the parameter lists in this specification and the parameters as found in the action logs. The mapping is handled by the type specified for a parameter. The set of defined types described at the end of this section (see the heading entitled Types) describes the valid types and the parameters to which they map in the action logs.</para>
<para>Note: Sample action log entries are provided for many of the actions in this section. They illustrate the proper encoding for the action logs.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType name="action">
<xsd:annotation>
<xsd:documentation>
<para>Every action element is encoded in the action logs as an action and its type attribute is set to the name of the element. For example, the element AddLocale is encoded as an action element in the action logs, with its type attribute set to AddLocale. For an example of this encoding, see the Sample action log entry for the AddLocale element. </para>
<para>Note: The action element is documented in the Metadata Provider (Wrapper) Reference. </para>
</xsd:documentation>
</xsd:annotation>
</xsd:complexType>
<xsd:complexType name="complexPropertyValue">
<xsd:annotation>
<xsd:documentation>
<para>If the value is an XML fragment, new child properties are created under the property in question from the child elements or attributes that exist in this value.</para>
<para>For example, in the following value being set on an instance of an existing package/functionSets property:</para>
<para>    &lt;functionSet&gt;&lt;functionSetID&gt;V_DB2&lt;/functionSetID&gt; &lt;/functionSet&gt;</para>
<para>    &lt;functionSet&gt;&lt;functionSetID&gt;V_MSAccess&lt;/functionSetID&gt;&lt;/functionSet&gt;</para>
<para>    &lt;functionSet&gt;&lt;functionSetID&gt;V_Oracle&lt;/functionSetID&gt;&lt;/functionSet&gt;</para>
<para>Three instances of functionSetID child properties will be created under the functionSets property, and their values set to V_DB2, V_MSAccess, and V_Oracle, respectively. </para>
<para>This type of value applies to a complex property. A complex property is one that can contain child properties of its own. In general, when dealing with a property that can have children, specify this option.</para>
<para>Note: All reserved XML characters must be escaped, even if the value is specified as an XML fragment.</para>
<para>For more information, see the Framework Manager model schema.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:simpleContent>
<xsd:restriction base="fmsdk:propertyValue"/>
</xsd:simpleContent>
</xsd:complexType>
<xsd:simpleType name="delimitedFilePath">
<xsd:annotation>
<xsd:documentation>
<para>Represents a path to a text file containing multiple columns of data, each column separated by a fixed delimiter character.</para>
<para>If the extension specified for the file is .csv, the delimiter is assumed to be a comma and the file is assumed to be in comma-separated values format and encoded according to the ISO 8859-1 (Latin-1) standard. Otherwise, the delimiter is assumed to be the tab character and the file is assumed to be in tab-delimited format, encoded according to the ISO 10646 UTF-8 (Unicode) standard.</para>
<para>Note: Path separator is "\" for Windows, "/" for UNIX.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:restriction base="xsd:string"/>
</xsd:simpleType>
<xsd:complexType name="localeCollection">
<xsd:annotation>
<xsd:documentation>
<para>Maps to a parameter of type stringCollection in the action logs.</para>
<para>Encoded in the same way as stringCollection, but the value for every item must be a valid XML language code.</para>
<para>For example, a parameter containing the languages English, German and French (Canada) would be encoded as: &lt;stringCollection&gt;&lt;item&gt;en&lt;/item&gt;&lt;item&gt;de&lt;/item&gt;&lt;item&gt;fr-ca&lt;/item&gt;&lt;/stringCollection&gt;</para>
</xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="locale" type="xsd:language" maxOccurs="unbounded"/>
</xsd:sequence>
</xsd:complexType>
<xsd:simpleType name="node">
<xsd:annotation>
<xsd:documentation>
<para>Maps to a parameter of type cclnode in the action logs.</para>
<para>Encoded as an XML fragment contained within a CDATA element.</para>
<para>For example:</para>
<para>![CDATA[&lt;setObjectAccess&gt;&lt;object rule="include" refobj="[1 - GOSales - OLE-DB].[CONVERSIONRATE]"&gt;&lt;access type="group" displayPath="All Authenticated Users [Directory &gt; Cognos]" cmSearchPath="CAMID(&quot;::All Authenticated Users&quot;)"/&gt;&lt;access type="role" displayPath="Authors [Directory &gt; Cognos]" cmSearchPath="CAMID(&quot;:Authors&quot;)"/&gt;&lt;/object&gt;&lt;/setObjectAccess&gt;]]</para>
</xsd:documentation>
</xsd:annotation>
<xsd:restriction base="xsd:string"/>
</xsd:simpleType>
<xsd:simpleType name="objectHandle">
<xsd:annotation>
<xsd:documentation>
<para>Maps to a parameter of type handle in the action logs.</para>
<para> Refers to an object in the model, encoded in the same manner as a standard object reference in the model. An object reference is a concatenation of object names from an object to the nearest ancestor namespace.</para>
<para>For example, [gosales_ml].[CONVERSION_RATE].[COUNTRY_CODE] - the query item COUNTRY_CODE which is contained in query subject CONVERSION_RATE, which in turn is contained in namespace gosales_m.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:restriction base="xsd:string"/>
</xsd:simpleType>
<xsd:simpleType name="objectName">
<xsd:annotation>
<xsd:documentation>
<para>Maps to a parameter of type i18nstring in the action logs.</para>
<para> The object name follows similar constraints to that of W3C NMTOKEN:</para>
<bulletList>
<listElement>Cannot be blank. If specified, an exception is thrown.</listElement>
<listElement>Cannot have either leading or trailing whitespace. If specified, the leading and trailing whitespace is implicitly trimmed from the name.</listElement>
<listElement>Cannot have consecutive blanks. If specified, any such occurrence is implicitly truncated to a single blank.</listElement>
</bulletList>
<para>For example, an object name of "    My     Object     " is implicitly truncated by Framework Manager to "My Object".</para>
</xsd:documentation>
</xsd:annotation>
<xsd:restriction base="xsd:string"/>
</xsd:simpleType>
<xsd:simpleType name="objectReference">
<xsd:annotation>
<xsd:documentation>
<para>Maps to a parameter of type i18nstring in the action logs.</para>
<para>Essentially the same as objectHandle, but is slightly different with respect to how it is handled internally.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:restriction base="xsd:string"/>
</xsd:simpleType>
<xsd:complexType name="optionalLocaleCollection">
<xsd:annotation>
<xsd:documentation>
<para>Maps to a parameter of type stringCollection in the action logs.</para>
<para>Encoded the same as stringCollection, but the value for every item must be a valid ISO-639 language code.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="locale" type="xsd:language" minOccurs="0" maxOccurs="unbounded"/>
</xsd:sequence>
</xsd:complexType>
<xsd:simpleType name="propertyHandle">
<xsd:annotation>
<xsd:documentation>
<para>Maps to a parameter of type handle in the action logs.</para>
<para>Refers to a property in the model, encoded as</para>
<bulletList>
<listElement>the same as an object reference is encoded in Framework Manager to identify the object containing the property, but</listElement>
<listElement>prefixed with an XPath-like expression to the property instance.</listElement>
</bulletList>
<para>For example, /O/screenTip[0]/O/[gosales_ml].[Order Discount] - Property screenTip of Order Discount object.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:restriction base="xsd:string"/>
</xsd:simpleType>
<xsd:complexType name="propertyValue" abstract="true">
<xsd:annotation>
<xsd:documentation>
<para>Maps to a parameter of type i18nstring in the action logs.</para>
<para>Represents the value being set on a property being created or updated. If it is an XML fragment, all reserved XML characters must be escaped, according to W3C standards. For example, the less than character must be encoded as "&lt;".</para>
</xsd:documentation>
</xsd:annotation>
<xsd:simpleContent>
<xsd:extension base="xsd:string"/>
</xsd:simpleContent>
</xsd:complexType>
<xsd:simpleType name="propertyValueTypeIdentifier">
<xsd:annotation>
<xsd:documentation>Identifies whether a given property value is a simple or a complex property.</xsd:documentation>
</xsd:annotation>
<xsd:restriction base="xsd:NMTOKEN">
<xsd:enumeration value="0">
<xsd:annotation>
<xsd:documentation>Complex. Specifies that the corresponding property value is of type complexPropertyValue. The value is an XML fragment, and child properties are created from any element or attribute definitions that exist in the value.	</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="1">
<xsd:annotation>
<xsd:documentation>Simple. Specifies that the corresponding property value is of type simplePropertyValue. The specified value is set explicitly on the property, and no child properties are created even if the value is an XML fragment.	</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
<xsd:complexType name="simplePropertyValue">
<xsd:annotation>
<xsd:documentation>
<para>Maps to a string and represents a simple value being set on a property. The value is simple in that child properties will not be inferred from it, even if the value is an XML fragment and the property in question is complex, in that it can contain child properties.</para>
<para>For example, the following value being set on an instance of an existing package/functionSets property:</para>
<para>    &lt;functionSet&gt;&lt;functionSetID&gt;V_DB2&lt;/functionSetID&gt; &lt;/functionSet&gt;</para>
<para>    &lt;functionSet&gt;&lt;functionSetID&gt;V_MSAccess&lt;/functionSetID&gt;&lt;/functionSet&gt;</para>
<para>    &lt;functionSet&gt;&lt;functionSetID&gt;V_Oracle&lt;/functionSetID&gt;&lt;/functionSet&gt;</para>
<para>The value of the functionSets property will be set to this XML fragment and child properties are not created for the functionSetID elements that appear in the value. </para>
</xsd:documentation>
</xsd:annotation>
<xsd:simpleContent>
<xsd:restriction base="fmsdk:propertyValue"/>
</xsd:simpleContent>
</xsd:complexType>
<xsd:complexType name="stringCollection">
<xsd:annotation>
<xsd:documentation>
<para>Maps to a parameter of type stringCollection in the action logs.</para>
<para>Represents a collection of strings that are encoded as an XML fragment with a root element called stringCollection and each string in its own item element. However, all reserved XML characters are escaped in the encoded value.</para>
<para>For example, a parameter of this type with strings "COUNTRY", "SALES", and "PRODUCTS" would be encoded as &lt;stringCollection&gt;&lt;item&gt;COUNTRY&lt;/item&gt;&lt;item&gt;SALES&lt;/item&gt;&lt;item&gt;PRODUCT&lt;/item&gt;&lt;/stringCollection&gt;</para>
</xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="stringValue" maxOccurs="unbounded">
<xsd:simpleType>
<xsd:restriction base="xsd:string"/>
</xsd:simpleType>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:group name="dbImportInputParametersRelational">
<xsd:annotation>
<xsd:documentation>
<para>A set of parameters representing the parameter list applicable to the DBImport action being executed against a relational data source.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element ref="fmsdk:joinOptionProcessExternalJoins"/>
<xsd:element ref="fmsdk:joinOptionProcessInternalJoins"/>
<xsd:element ref="fmsdk:joinOptionProcessKeys"/>
<xsd:element ref="fmsdk:joinOptionProcessMatchingIndexColumns"/>
<xsd:element ref="fmsdk:joinOptionProcessMatchingQueryItemNames"/>
<xsd:element ref="fmsdk:joinOptionProcessOuterJoinOption"/>
<xsd:element ref="fmsdk:nameConflictOptionImport"/>
<xsd:element ref="fmsdk:displaySummaryMessageOption" minOccurs="0"/>
<xsd:element ref="fmsdk:storedProcedureOptionThrowExceptionOption" minOccurs="0"/>
</xsd:sequence>
</xsd:group>
<xsd:group name="dbImportInputParametersSAPBW">
<xsd:annotation>
<xsd:documentation source="sapbw">
<para>Represents the parameter list applicable to the DBImport action being executed against a multidimensional (SAP BW) data source.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="sapbwImportOptionUseOrLongNames">
<xsd:annotation>
<xsd:documentation source="sapbw"/>
<xsd:documentation>
<para>SAP BW objects have a short name (short description or caption), a long name (long description), and a technical name (unique name). Specifies which name to use for the imported objects.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:simpleType>
<xsd:restriction base="xsd:NMTOKEN">
<xsd:enumeration value="0">
<xsd:annotation>
<xsd:documentation>Use short names.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="1">
<xsd:annotation>
<xsd:documentation>Use technical names.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="2">
<xsd:annotation>
<xsd:documentation>Use long names.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
</xsd:element>
<xsd:element name="sapbwImportOptionObjectOrganization">
<xsd:annotation>
<xsd:documentation source="sapbw"/>
<xsd:documentation>
<para>Specifies whether or not to enhance the model for SAP BW organization of objects.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:simpleType>
<xsd:restriction base="xsd:NMTOKEN">
<xsd:enumeration value="0">
<xsd:annotation>
<xsd:documentation>Enhance the organization of objects to reflect SAP BW objects more closely.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="1">
<xsd:annotation>
<xsd:documentation>Use the default object organization.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
</xsd:element>
<xsd:element name="sapbwImportLocales" type="fmsdk:optionalLocaleCollection">
<xsd:annotation>
<xsd:documentation source="sapbw"/>
<xsd:documentation>
<para>Specifies which languages from the SAP BW data source should be imported into the model. These languages are added to the model if they do not already exist in the model.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="sapbwImportOptionCreateConformedDimensions">
<xsd:annotation>
<xsd:documentation source="sapbw"/>
<xsd:documentation>
<para>Specifies whether or not to create conformed dimensions for all applicable imported dimensions.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element ref="fmsdk:nameConflictOptionImport"/>
</xsd:sequence>
</xsd:group>
<xsd:group name="inputParamsCreate">
<xsd:annotation>
<xsd:documentation>A set of parameters representing the input parameter list specific to the Create action, and the Verify action for Create.</xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="objectType">
<xsd:annotation>
<xsd:documentation>Specifies the object type to create.</xsd:documentation>
</xsd:annotation>
<xsd:simpleType>
<xsd:restriction base="xsd:NMTOKEN">
<xsd:enumeration value="1">
<xsd:annotation>
<xsd:documentation>Query Subject</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="2">
<xsd:annotation>
<xsd:documentation>Query Item</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="3">
<xsd:annotation>
<xsd:documentation>Relationship</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="4">
<xsd:annotation>
<xsd:documentation>Shortcut</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="5">
<xsd:annotation>
<xsd:documentation>Folder</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="6">
<xsd:annotation>
<xsd:documentation>Package</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="8">
<xsd:annotation>
<xsd:documentation>Project</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="9">
<xsd:annotation>
<xsd:documentation>Relationship Shortcut</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="10">
<xsd:annotation>
<xsd:documentation>Custom Object. RESERVED for future use.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="11">
<xsd:annotation>
<xsd:documentation>Runtime Object. RESERVED for future use.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="12">
<xsd:annotation>
<xsd:documentation>Calculation</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="13">
<xsd:annotation>
<xsd:documentation>Filter</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="14">
<xsd:annotation>
<xsd:documentation>Parameter Map</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="15">
<xsd:annotation>
<xsd:documentation>Parameter Map Entry</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="16">
<xsd:annotation>
<xsd:documentation>Security View</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="17">
<xsd:annotation>
<xsd:documentation>Query Item Folder</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="18">
<xsd:annotation>
<xsd:documentation>Function</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="19">
<xsd:annotation>
<xsd:documentation>Namespace</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="20">
<xsd:annotation>
<xsd:documentation>Data Source</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="21">
<xsd:annotation>
<xsd:documentation>Dimension</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="22">
<xsd:annotation>
<xsd:documentation>Level</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="23">
<xsd:annotation>
<xsd:documentation>Scope Relationship</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="24">
<xsd:annotation>
<xsd:documentation>Hierarchy</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="25">
<xsd:annotation>
<xsd:documentation>Update Subject</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="26">
<xsd:annotation>
<xsd:documentation>Measure Folder</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="27">
<xsd:annotation>
<xsd:documentation>Measure</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
</xsd:element>
<xsd:element ref="fmsdk:targetParent"/>
<xsd:sequence minOccurs="0">
<xsd:element ref="fmsdk:newObjectName"/>
<xsd:sequence minOccurs="0">
<xsd:element ref="fmsdk:nameConflictOptionCreate"/>
</xsd:sequence>
</xsd:sequence>
</xsd:sequence>
</xsd:group>
<xsd:group name="inputParamsDelete">
<xsd:annotation>
<xsd:documentation>
<para>A set of parameters representing the input parameter list specific to the Delete action, and the Verify action for Delete.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:choice>
<xsd:element name="deleteObject" type="fmsdk:objectHandle">
<xsd:annotation>
<xsd:documentation>
<para>Can be any object in the model except:
							<bulletList>
<listElement>root container objects. These are objects within the root project object, namely dataSources, packages, parameterMaps, securityViews, and the root namespace.</listElement>
<listElement>query items that belong to datasource query subjects (dbQuery).</listElement>
</bulletList>
</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="deleteProperty" type="fmsdk:propertyHandle">
<xsd:annotation>
<xsd:documentation>
<para>Can be any property in the model.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:choice>
</xsd:group>
<xsd:group name="inputParamsImportTranslations">
<xsd:annotation>
<xsd:documentation>
<para>A set of parameters representing the input parameter list specific to the ImportTranslations action, and the Verify action for ImportTranslations.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element ref="fmsdk:translationsFilePath"/>
<xsd:sequence minOccurs="0">
<xsd:element name="keyLocale" type="xsd:string">
<xsd:annotation>
<xsd:documentation>
<para>Specifies the locale used as the search criteria for properties that are being translated. The default is the locale ID of defaultLocale in the model.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:sequence minOccurs="0">
<xsd:element name="applyLocales" type="fmsdk:localeCollection">
<xsd:annotation>
<xsd:documentation>
<para>Specifies that only the properties in these locales are updated when importing the translations. If not specified, all locales in the model except for the input parameter keyLocale are processed.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:sequence minOccurs="0">
<xsd:element name="importTranslationsRootObject" maxOccurs="unbounded">
<xsd:annotation>
<xsd:documentation>
<para>The set of objects to which to apply the translations are restricted to this object or any of its descendants. If not specified, all objects in the model are processed.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:sequence minOccurs="0">
<xsd:element ref="fmsdk:selectedObjectsProcessingLevel"/>
</xsd:sequence>
</xsd:sequence>
</xsd:sequence>
</xsd:sequence>
</xsd:sequence>
</xsd:group>
<xsd:group name="inputParamsMove">
<xsd:annotation>
<xsd:documentation>
<para>A set of parameters representing the input parameter list specific to the Move action, and the Verify action for Move.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element ref="fmsdk:targetParent"/>
<xsd:element name="moveObject" type="fmsdk:objectHandle" maxOccurs="unbounded">
<xsd:annotation>
<xsd:documentation>
<para>Specifies the object being moved.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:group>
<xsd:group name="inputParamsModify">
<xsd:annotation>
<xsd:documentation>
<para>A set of parameters representing the input parameter list specific to the Modify action, and the Verify action for Modify.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="simpleProperty" type="fmsdk:propertyHandle">
<xsd:annotation>
<xsd:documentation>
<para>Specifies the simple property being updated. The property is simple in that it is does not have any child properties.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="newSimpleValue" type="fmsdk:simplePropertyValue">
<xsd:annotation>
<xsd:documentation>
<para>The value used to update the property.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:group>
<xsd:group name="inputParamsDynamicImportPublish">
<xsd:annotation>
<xsd:documentation>
<para>A set of parameters representing the input parameter list specific to the DynamicImportPublish action.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element ref="fmsdk:crnDataSourceName"/>
<xsd:element name="targetPackageName" type="xsd:string" minOccurs="0">
<xsd:annotation>
<xsd:documentation>
<para>The name of the package to be published. If omiited, the package will be named after the cube name.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:sequence minOccurs="0">
<xsd:annotation>
<xsd:documentation>
<para>The following parameters are for DB2, MSAS, Finance (CL), and Planning (CR).</para>
</xsd:documentation>
</xsd:annotation>
<xsd:element name="catalogName" type="xsd:string">
<xsd:annotation>
<xsd:documentation>
<para>The name of the parent catalog. This name is required for all datasource types except Powercube.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:sequence minOccurs="0">
<xsd:annotation>
<xsd:documentation>
<para>The following parameter is for Finance (CL) and Planning (CR).</para>
</xsd:documentation>
</xsd:annotation>
<xsd:element name="schemaName" type="xsd:string">
<xsd:annotation>
<xsd:documentation>
<para>The name of the parent schema. This name is required for Cognos Finance and Planning datasources.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
<xsd:element name="cubeName" type="xsd:string">
<xsd:annotation>
<xsd:documentation>
<para>The name of the cube. This name is required for all datasource types except Powercube.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:sequence minOccurs="0">
<xsd:annotation>
<xsd:documentation>
<para>The following two parameters are optional for DB2 (DO).</para>
</xsd:documentation>
</xsd:annotation>
<xsd:element name="DB2AliasLocales" type="fmsdk:localeCollection">
<xsd:annotation>
<xsd:documentation>
<para>The collection of the locales to be imported.</para>
<para>This collection is used to create a map between a locale and an alias table (see the input parameter below.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="DB2AliasNames" type="fmsdk:stringCollection">
<xsd:annotation>
<xsd:documentation>
<para>The collection of the alias names corresponding to the above collection of locales.</para>
<para>This collection and the locale collection is used to create a map between a locale and an alias caption table.</para>
<para>The sizes of the two collections must be equal.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:sequence>
</xsd:sequence>
</xsd:group>
<xsd:group name="inputParamsPublish">
<xsd:annotation>
<xsd:documentation>
<para>A set of parameters representing the input parameter list specific to the Publish action, and the Verify action for Publish.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element ref="fmsdk:regularPackage"/>
<xsd:element ref="fmsdk:publishTargetType"/>
<xsd:element ref="fmsdk:targetLocation"/>
<xsd:element ref="fmsdk:targetPackageName"/>
<xsd:element ref="fmsdk:packageExists"/>
<xsd:element name="temporaryRetentionValue" type="xsd:integer" minOccurs="0">
<xsd:annotation>
<xsd:documentation>
<para>Specifies the maximum number of versions that the published package can have in IBM Cognos 10. If the value is -1, then versioning is turned off.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="permanentRetentionValue" type="xsd:integer" minOccurs="0">
<xsd:annotation>
<xsd:documentation>
<para>Specifies the maximum number of versions that the published package can have in the Framework Manager model. If the value is -1, then versioning is turned off.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="externalizeQuerySubjects" default="0" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Indicates whether or not to externalize the query subjects included in the package that are marked for externalization.</xsd:documentation>
</xsd:annotation>
<xsd:simpleType>
<xsd:restriction base="xsd:NMTOKEN">
<xsd:enumeration value="0">
<xsd:annotation>
<xsd:documentation>Do not externalize the query subjects.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="1">
<xsd:annotation>
<xsd:documentation>Externalize the query subjects.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
</xsd:element>
<xsd:element ref="fmsdk:externalizeRootDirectory" minOccurs="0"/>
</xsd:sequence>
</xsd:group>
<xsd:element name="fmsdkScript">
<xsd:complexType>
<xsd:choice>
<xsd:element name="actionLog">
<xsd:annotation>
<xsd:documentation>Maps to the bmtactionlog root element that appears in a Framework Manager action log. An action log can be executed from within Framework Manager, by the Framework Manager script player, or by the Framework Manager Metadata Service.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:transaction" minOccurs="0" maxOccurs="unbounded"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="metaDataServiceRequest">
<xsd:annotation>
<xsd:documentation>Maps to a SOAP request intended to be handled by the Framework Manager Metadata Service.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:transaction" minOccurs="0" maxOccurs="unbounded"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:choice>
</xsd:complexType>
</xsd:element>
<xsd:element name="catalogName">
<xsd:annotation>
<xsd:documentation>Specifies the name of the catalog.</xsd:documentation>
</xsd:annotation>
<xsd:simpleType>
<xsd:restriction base="xsd:string"/>
</xsd:simpleType>
</xsd:element>
<xsd:element name="schemaName">
<xsd:annotation>
<xsd:documentation>Specifies the name of the schema.</xsd:documentation>
</xsd:annotation>
<xsd:simpleType>
<xsd:restriction base="xsd:string"/>
</xsd:simpleType>
</xsd:element>
<xsd:element name="cubeName">
<xsd:annotation>
<xsd:documentation>Specifies the name of the cube.</xsd:documentation>
</xsd:annotation>
<xsd:simpleType>
<xsd:restriction base="xsd:string"/>
</xsd:simpleType>
</xsd:element>
<xsd:element name="conformedDimensionCandidate" type="fmsdk:objectHandle">
<xsd:annotation>
<xsd:documentation source="sapbw"/>
<xsd:documentation>
<para>A dimension that can be conformed to the target.</para>
<para>Note: Applies to multidimensional dimensions (specifically of type SapBW) only.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="createAutoSummary" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>
<para>If set to true, a grouping and aggregation of the projection items is triggered.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="crnDataSourceConnectionName" type="xsd:string">
<xsd:annotation>
<xsd:documentation>
<para>The name of an IBM Cognos 10 data source connection object.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="crnDataSourceConnectionSignonName" type="xsd:string">
<xsd:annotation>
<xsd:documentation>
<para>The name of an IBM Cognos 10 data source connection signon object.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="crnDataSourceConnectionSignonPassword" type="xsd:string">
<xsd:annotation>
<xsd:documentation>
<para>The password for authenticating to a given IBM Cognos 10 data source connection.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="crnDataSourceConnectionSignonUser" type="xsd:string">
<xsd:annotation>
<xsd:documentation>
<para>The user name for authenticating to a given IBM Cognos 10 data source connection.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="crnDataSourceConnectionCubePassword" type="xsd:string">
<xsd:annotation>
<xsd:documentation>
<para>The password for authenticating to a given Cognos PowerCube data source connection.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="crnDataSourceConnectionCubePasswordEncrypted" type="xsd:integer">
<xsd:annotation>
<xsd:documentation>
<para>Specifies if the cube password for authenticating to a given Cognos PowerCube data source connection is encrypted (0 means not encrypted).</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="crnDataSourceName" type="xsd:string">
<xsd:annotation>
<xsd:documentation>
<para>The name of an IBM Cognos 10 data source object.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="dataSource" type="fmsdk:objectHandle">
<xsd:annotation>
<xsd:documentation>
<para>A data source object in the model.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="dataSourceName" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Specifies the name of the data source.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="executionReportDetailLevel" default="1">
<xsd:annotation>
<xsd:documentation>Represents the level of detail for the report.</xsd:documentation>
</xsd:annotation>
<xsd:simpleType>
<xsd:restriction base="xsd:NMTOKEN">
<xsd:enumeration value="1">
<xsd:annotation>
<xsd:documentation>Only errors are reported.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="2">
<xsd:annotation>
<xsd:documentation>Errors and warnings are reported.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="3">
<xsd:annotation>
<xsd:documentation>Errors, warnings and information about key transformations that might have been used are reported.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="4">
<xsd:annotation>
<xsd:documentation>The highest level of detail. In addition to any of the above items, planning or execution information are reported.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
</xsd:element>
<xsd:element name="expression" type="fmsdk:propertyHandle">
<xsd:annotation>
<xsd:documentation>Specifies the expression to be executed.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="gatewayURI" type="xsd:anyURI">
<xsd:annotation>
<xsd:documentation>
<para>The gateway configuration parameter.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="importSourceSpec" type="fmsdk:node">
<xsd:annotation>
<xsd:documentation>
<para>Must conform to the ImportSpec.xsd. Value represents a tree of the objects found in a given import source, and indicates which object is selected to be processed. For the browse actions, an item containing the "namePattern" element is the item to be expanded. For the import actions, items having a value attribute of "true" or "partial" are the items to be imported. The import source can be either a data source or a Framework Manager model.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="importSourceSpecDataSource" type="fmsdk:node">
<xsd:annotation>
<xsd:documentation>
<para>Must conform to the ImportSpec.xsd. Value represents a tree of the objects found in a given import source, and indicates which object is selected to be processed. For the browse actions, an item containing the "namePattern" element is the item to be expanded. For the import actions, items having a value attribute of "true" or "partial" are the items to be imported. The import source can be either a data source or a Framework Manager model.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="importSourceSpecModel" type="fmsdk:node">
<xsd:annotation>
<xsd:documentation>
<para>Must conform to the ImportSpec.xsd. The value represents a tree of the objects found in a given import source, and indicates which object is selected to be processed. For the browse actions, an item containing the "namePattern" element is the item to be expanded. For the import actions, items having a value attribute of "true" or "partial" are the items to be imported. The import source can be either a data source or a Framework Manager model.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="includeRule">
<xsd:annotation>
<xsd:documentation>Specifies the rule that governs publication and visibility of the object.</xsd:documentation>
</xsd:annotation>
<xsd:simpleType>
<xsd:restriction base="xsd:NMTOKEN">
<xsd:enumeration value="0">
<xsd:annotation>
<xsd:documentation>Exclude. The object is not published unless it is required. For example, if it is referenced by another object that is being published, or if it is involved in the relationship path between two objects that are being published. If this object is required, it is published but not visible.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="1">
<xsd:annotation>
<xsd:documentation>Hide. The object is published but not visible.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="2">
<xsd:annotation>
<xsd:documentation>Include. The object is published and is visible.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
</xsd:element>
<xsd:element name="joinOptionProcessOuterJoinOption" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>
<para>Specifies a join option to create outer joins.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="joinOptionProcessExternalJoins" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>
<para>Specifies a join option between each imported query subject and all existing query subjects in the model.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="joinOptionProcessInternalJoins" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>
<para>Specifies a join option between the imported query subjects.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="joinOptionProcessKeys" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>
<para>Specifies a join option to use primary and foreign keys.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="joinOptionProcessMatchingIndexColumns" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>
<para>Specifies a join option to use matching query item names that represent uniquely indexed columns.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="joinOptionProcessMatchingQueryItemNames" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>
<para>Specifies a join option to use matching query item names.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="linkSegmentRootObject">
<xsd:annotation>
<xsd:documentation>
<para>Either a namespace, a folder, the parameterMaps container object or the dataSources container object.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="maximumRowsToBeRetrieved">
<xsd:annotation>
<xsd:documentation>
<para>A value of 0 means Do not execute.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:simpleType>
<xsd:restriction base="xsd:nonNegativeInteger"/>
</xsd:simpleType>
</xsd:element>
<xsd:element name="modelLocale" type="xsd:language">
<xsd:annotation>
<xsd:documentation>
<para>Represents a locale that must exist in the model, under the project/locales property.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="modelPath" type="xsd:string">
<xsd:annotation>
<xsd:documentation>
<para>Represents the network path to an existing Framework Manager project. It could be a relative path to the base project. To be used in case of running action log stripts on temporary location.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="multidimensionalDimension" type="fmsdk:objectHandle">
<xsd:annotation>
<xsd:documentation>
<para>The multidimensional dimension that represents the conformed dimension target.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="nameConflictOptionCreate" default="1">
<xsd:annotation>
<xsd:documentation>
<para>Specifies what to do if another object exists with the same name.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:simpleType>
<xsd:restriction base="xsd:NMTOKEN">
<xsd:enumeration value="0">
<xsd:annotation>
<xsd:documentation>The object is not created and an exception is thrown.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="1">
<xsd:annotation>
<xsd:documentation>Create the object but make its name unique by appending a sequence number to it.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
</xsd:element>
<xsd:element name="nameConflictOptionImport">
<xsd:annotation>
<xsd:documentation>
<para>Specifies what to do with an imported object if its name conflicts with that of an object that already exists in the model.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:simpleType>
<xsd:restriction base="xsd:NMTOKEN">
<xsd:enumeration value="0">
<xsd:annotation>
<xsd:documentation>Do not import the object.	</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="1">
<xsd:annotation>
<xsd:documentation>Import the object but make its name unique by appending a sequence number to it.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
</xsd:element>
<xsd:element name="object">
<xsd:annotation>
<xsd:documentation>Can be any object in the model.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="newObjectName" type="fmsdk:objectName">
<xsd:annotation>
<xsd:documentation>Specifies a name for the new object.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="packageExists">
<xsd:annotation>
<xsd:documentation>Indicates whether or not the package already exists in the target location. In Framework Manager, this value is based on the result from a prior call to the IsModelViewPresent action.</xsd:documentation>
</xsd:annotation>
<xsd:simpleType>
<xsd:restriction base="xsd:NMTOKEN">
<xsd:enumeration value="0">
<xsd:annotation>
<xsd:documentation>A package already exists with the same name and is in the same location as that of the specified package.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="1">
<xsd:annotation>
<xsd:documentation>No package exists with the same name in the same location as that of the specified package.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
</xsd:element>
<xsd:element name="parameterName" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Specifies the name of the parameter.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="parameterValue" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Specifies the value of the parameter.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="promptName" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Specifies the name of a prompt.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="promptValue" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Specifies the value of a prompt.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="publishTargetType">
<xsd:annotation>
<xsd:documentation>Specifies the type for the requested package.</xsd:documentation>
</xsd:annotation>
<xsd:simpleType>
<xsd:restriction base="xsd:NMTOKEN">
<xsd:enumeration value="0">
<xsd:annotation>
<xsd:documentation>RESERVED for internal use only.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="1">
<xsd:annotation>
<xsd:documentation>Framework Manager project on the network.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="2">
<xsd:annotation>
<xsd:documentation>Cognos 10 Content Manager package.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="3">
<xsd:annotation>
<xsd:documentation>RESERVED for internal use only.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
</xsd:element>
<xsd:element name="dependencySpec" type="fmsdk:node">
<xsd:annotation>
<xsd:documentation>
<para>Conforms to the ImportSpec.xsd. Value represents a tree of the objects that depend on the upper-level objects, which in turn depend on the selected object (not shown on the tree).</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="qsapiResponseSpec" type="fmsdk:node">
<xsd:annotation>
<xsd:documentation>
<para>Specification not yet available.</para>
<writerComment>need details from CQE</writerComment>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="parameterMap">
<xsd:annotation>
<xsd:documentation>Contains a collection of key-value pairs used to query a database.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="queryItemOrCalculation" type="fmsdk:objectHandle">
<xsd:annotation>
<xsd:documentation>Either a query item or calculation object in the model.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="querySubject" type="fmsdk:objectHandle">
<xsd:annotation>
<xsd:documentation>A query subject in the Framework Manager model.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="querySubjectOrDimension" type="fmsdk:objectHandle">
<xsd:annotation>
<xsd:documentation>A query subject or dimension in the Framework Manager model. </xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="reportItemOrReportItemContainer" type="fmsdk:objectHandle">
<xsd:annotation>
<xsd:documentation>Any object in the Framework Manager model that can be reported against, or can contain such an object. These objects are: query subject, dimension, query item, query item folder, measure, measure folder, hierarchy, level and calculation. </xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="updateSubject" type="fmsdk:objectHandle">
<xsd:annotation>
<xsd:documentation>An update subject in the Framework Manager model.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="regularPackage" type="fmsdk:objectHandle">
<xsd:annotation>
<xsd:documentation>A package object in the model whose isRoleBased property is set to false.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="reportObject" type="fmsdk:objectHandle">
<xsd:annotation>
<xsd:documentation>The objects that can be directly used in reports. For more information, see the Framework Manager model schema.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="roleBasedPackage" type="fmsdk:objectHandle">
<xsd:annotation>
<xsd:documentation>A package object in the model whose isRoleBased property is set to true.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="schemaPath" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Represents the network path to the current schema version.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="securityViewOrPackage" type="fmsdk:objectHandle">
<xsd:annotation>
<xsd:documentation>Either a security view or regular package in the model. A regular package is one whose isRoleBased property is set to false.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="selectedObjectsProcessingLevel">
<xsd:annotation>
<xsd:documentation>Indicates whether to process only the selected objects or the selected objects and their children.</xsd:documentation>
</xsd:annotation>
<xsd:simpleType>
<xsd:restriction base="xsd:NMTOKEN">
<xsd:enumeration value="0">
<xsd:annotation>
<xsd:documentation>Process selected objects only.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="1">
<xsd:annotation>
<xsd:documentation>Process selected objects and their children.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
</xsd:element>
<xsd:element name="shortcut">
<xsd:annotation>
<xsd:documentation>Defines a shortcut to an object.</xsd:documentation>
</xsd:annotation>
<xsd:simpleType>
<xsd:restriction base="fmsdk:objectHandle"/>
</xsd:simpleType>
</xsd:element>
<xsd:element name="sourceObject" type="fmsdk:objectHandle">
<xsd:annotation>
<xsd:documentation>Represents the source object for the action.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="targetLocation" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Specifies the location of the Cognos 10 server.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="targetPackageName" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Specifies the name of the package.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="targetParent" type="fmsdk:objectHandle">
<xsd:annotation>
<xsd:documentation>Represents the target parent object for the action.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="targetContainer" type="fmsdk:objectHandle">
<xsd:annotation>
<xsd:documentation>Either a namespace or a folder.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="targetDimension" type="fmsdk:objectHandle">
<xsd:annotation>
<xsd:documentation>A multidimensional query subject that serves as the target of the conformed dimension.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="transaction">
<xsd:annotation>
<xsd:documentation>Maps to a transaction element in the action log.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="fmsdk:AddLocale"/>
<xsd:element ref="fmsdk:AddProperty"/>
<xsd:element ref="fmsdk:BuildObjectReference"/>
<xsd:element ref="fmsdk:Cancel"/>
<xsd:element ref="fmsdk:CheckModel"/>
<xsd:element ref="fmsdk:ClearDataSourceCache"/>
<xsd:element ref="fmsdk:ConformedDimensionsCandidates"/>
<xsd:element ref="fmsdk:ConformedDimensionsCreate"/>
<xsd:element ref="fmsdk:ConformedDimensionsDetect"/>
<xsd:element ref="fmsdk:Copy"/>
<xsd:element ref="fmsdk:CountQuerySubject"/>
<xsd:element ref="fmsdk:Create"/>
<xsd:element ref="fmsdk:CreateCalculationInFolder"/>
<xsd:element ref="fmsdk:CreateShortcut"/>
<xsd:element ref="fmsdk:DBBrowse"/>
<xsd:element ref="fmsdk:DBImport"/>
<xsd:element ref="fmsdk:DBImportJoinsOnKeys"/>
<xsd:element ref="fmsdk:DBMakePhysicalSqlName"/>
<xsd:element ref="fmsdk:DBRelationshipPath"/>
<xsd:element ref="fmsdk:DBRelease"/>
<xsd:element ref="fmsdk:DBStoredProcedure"/>
<xsd:element ref="fmsdk:DoDependencyAnalysis"/>
<xsd:element ref="fmsdk:CloseQueryServicesConnection"/>
<xsd:element ref="fmsdk:Delete"/>
<xsd:element ref="fmsdk:DoReportsExist"/>
<xsd:element ref="fmsdk:DoQueryServicesRequest"/>
<xsd:element ref="fmsdk:doUpgrade"/>
<xsd:element ref="fmsdk:EvaluateSecurityView"/>
<xsd:element ref="fmsdk:ExpandParameters"/>
<xsd:element ref="fmsdk:ExplainLogFile"/>
<xsd:element ref="fmsdk:ExportTranslations"/>
<xsd:element ref="fmsdk:ExpressionQuery"/>
<xsd:element ref="fmsdk:externalizeQuerySubject"/>
<xsd:element ref="fmsdk:FindOrCreateDataSource"/>
<xsd:element ref="fmsdk:GenerateID"/>
<xsd:element ref="fmsdk:GetApplicationVersion"/>
<xsd:element ref="fmsdk:GetCandidateRelationships"/>
<xsd:element ref="fmsdk:GetContentManagerGateway"/>
<xsd:element ref="fmsdk:GetDataSourceConnectionSelections"/>
<xsd:element ref="fmsdk:GetDataSourceInfo"/>
<xsd:element ref="fmsdk:GetDefaultLocale"/>
<xsd:element ref="fmsdk:GetNearestCommonParentObject"/>
<xsd:element name="GetObjectAccess">
<xsd:annotation>
<xsd:documentation>
<para>Returns the object security specifications on an object or set of objects. The resulting specifications consist of every role, account, and group currently in use in the model, with a corresponding rule (either allow, deny, or unspecified) for each. If an object is not directly secured, the rules are taken from the nearest parent object that is directly secured. If no such object exists, the rule returned for every role in the model is set to unspecified. If no roles exist in the model (that is, object security has not been specified on any object in the model), only the role called Everyone is returned, and its rule is set to unspecified.</para>
<para>If multiple objects are specified, the rules for every role are merged. Conflicting rules are resolved in the following order of precedence: deny, allow, and then unspecified.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:object" maxOccurs="unbounded"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:objectAccess"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element ref="fmsdk:GetObjectAncestry"/>
<xsd:element ref="fmsdk:GetPackageInclusionsForObject"/>
<xsd:element ref="fmsdk:GetPassportFromCM"/>
<xsd:element ref="fmsdk:GetPromptValues"/>
<xsd:element ref="fmsdk:GetQueryProcessingMode"/>
<xsd:element ref="fmsdk:GetRuntimeParameters"/>
<xsd:element ref="fmsdk:GetSecurityObjectUsage"/>
<xsd:element ref="fmsdk:GetSupportedLocales"/>
<xsd:element ref="fmsdk:ImportTranslations"/>
<xsd:element ref="fmsdk:IsModelViewPresent"/>
<xsd:element ref="fmsdk:LinkModel"/>
<xsd:element ref="fmsdk:MakeExpressionGlobal"/>
<xsd:element ref="fmsdk:MakeObjectNameUnique"/>
<xsd:element ref="fmsdk:Merge"/>
<xsd:element ref="fmsdk:ModelBrowse"/>
<xsd:element ref="fmsdk:ModelDiff"/>
<xsd:element ref="fmsdk:ModelImport"/>
<xsd:element ref="fmsdk:Modify"/>
<xsd:element ref="fmsdk:ModifyComplex"/>
<xsd:element ref="fmsdk:Move"/>
<xsd:element ref="fmsdk:PopulateParameterMap"/>
<xsd:element ref="fmsdk:PreviewSecurityFilter"/>
<xsd:element ref="fmsdk:Publish"/>
<xsd:element ref="fmsdk:RemoveLocale"/>
<xsd:element ref="fmsdk:RemoveRuntimeParameters"/>
<xsd:element ref="fmsdk:ReorderBefore"/>
<xsd:element ref="fmsdk:Repair"/>
<xsd:element ref="fmsdk:RepairReports"/>
<xsd:element ref="fmsdk:ResetPromptValues"/>
<xsd:element ref="fmsdk:RetargetObjectReferences"/>
<xsd:element ref="fmsdk:RetrieveQueryItemParameters"/>
<xsd:element ref="fmsdk:SegmentModel"/>
<xsd:element ref="fmsdk:SelectDataSourceConnection"/>
<xsd:element ref="fmsdk:SelectDataSourceCredentials"/>
<xsd:element ref="fmsdk:SelectDataSourceDom"/>
<xsd:element ref="fmsdk:SetActiveLocale"/>
<xsd:element ref="fmsdk:SetDefaultLocale"/>
<xsd:element ref="fmsdk:SetObjectAccess"/>
<xsd:element ref="fmsdk:SetPackageLocales"/>
<xsd:element ref="fmsdk:SetPromptValue"/>
<xsd:element ref="fmsdk:SetQueryItemParameterMap"/>
<xsd:element ref="fmsdk:SetSecurityViewAccess"/>
<xsd:element ref="fmsdk:SetRuntimeParameters"/>
<xsd:element ref="fmsdk:SetSecurityViewDefinition"/>
<xsd:element ref="fmsdk:shouldUpgrade"/>
<xsd:element ref="fmsdk:ShowImpact"/>
<xsd:element ref="fmsdk:SQLPlanAssociation"/>
<xsd:element ref="fmsdk:TestDataSource"/>
<xsd:element ref="fmsdk:TestQuerySubject"/>
<xsd:element ref="fmsdk:TransformCreateStarGrouping"/>
<xsd:element ref="fmsdk:TransformFunction"/>
<xsd:element ref="fmsdk:TransformObjectNames"/>
<xsd:element ref="fmsdk:TransformQueryItemAggregateRule"/>
<xsd:element ref="fmsdk:TransformQueryItemUsage"/>
<xsd:element ref="fmsdk:TransformRelationship"/>
<xsd:element ref="fmsdk:TranslateReference"/>
<xsd:element ref="fmsdk:UseContentManager4Authentication"/>
<xsd:element ref="fmsdk:Verify"/>
<xsd:element ref="fmsdk:VerifyCMAuthentication"/>
<xsd:element ref="fmsdk:GetAllPackages"/>
<xsd:element ref="fmsdk:EvaluateObject"/>
<xsd:element ref="fmsdk:UpdateQuerySubject"/>
</xsd:choice>
</xsd:complexType>
</xsd:element>
<xsd:element name="translationsFilePath" type="fmsdk:delimitedFilePath">
<xsd:annotation>
<xsd:documentation>
<para>The translations file contains a special header record, with each field being the XML language ID of a locale in the model.</para>
<para>For every multilingual property found, a record is created in the translations file. For every multilingual instance of the property, a field within the record is created.</para>
<para>For example, if an object has a name property that has the value "my value" in English and the value "mon valeur" in French, the translations file will contain a header record containing fields "en" and "fr", as well as another record containing fields "my value" in the "en" column, and "mon valeur" in the "fr" column.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="AddLocale">
<xsd:annotation>
<xsd:documentation>
<para>Adds a set of locales to the model.</para>
<para>For each locale, the following occurs:</para>
<bulletList>
<listElement>A new instance of the locale property is created under project/locales in the model. The locale property value is set to the locale ID.</listElement>
<listElement>For every multilingual property collection in the model that has a locale attribute, a new property instance is created. The locale attribute of the new property instance is set to the locale ID. The value of the new property instance is set to the same value as the property instance whose locale attribute matches the locale ID of the active locale, but is prefixed with the locale ID. For more information about multilingual properties, see the Framework Manager model schema. For more information about the active locale, see SetActiveLocale.</listElement>
</bulletList>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="addLocales" type="fmsdk:localeCollection">
<xsd:annotation>
<xsd:documentation>The set of locales to be added to the model.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="keyLocale" type="xsd:language" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Represents a language that must exist in the model, under the project/locales property. When creating the new multilingual property instances, the property values are based on the corresponding values of the same property in this locale. If not specified, the active locale is used as the key. For more information about the active locale, see SetActiveLocale.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>
<action seq="1" type="AddLocale">
<inputparams>
<param seq="1" type="stringCollection">
<value>
<stringCollection>
<item>fr-ca</item>
</stringCollection>
</value>
</param>
<param seq="2" type="i18nstring">
<value>en-us</value>
</param>
</inputparams>
<domchanges/>
<result success="t">
<outputparams/>
</result>
</action>
</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="AddProperty">
<xsd:annotation>
<xsd:documentation>Creates a new property and optionally sets its value.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:choice>
<xsd:element name="parentObject" type="fmsdk:objectHandle">
<xsd:annotation>
<xsd:documentation>Specifies the object to which this property relates.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="parentProperty" type="fmsdk:propertyHandle">
<xsd:annotation>
<xsd:documentation>Specifies the parent property to which this property relates.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:choice>
<xsd:element name="propertyPath" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Specifies the name and location of the property to be created.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:choice>
<xsd:sequence>
<xsd:element name="propertyValueTypeSimple" type="fmsdk:propertyValueTypeIdentifier" fixed="1">
<xsd:annotation>
<xsd:documentation>Identifies that the corresponding property value is simple.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="addPropertyValueSimple" type="fmsdk:simplePropertyValue">
<xsd:annotation>
<xsd:documentation>Identifies that the value set on the newly created property is simple.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
<xsd:sequence>
<xsd:element name="propertyValueTypeComplex" type="fmsdk:propertyValueTypeIdentifier" fixed="0">
<xsd:annotation>
<xsd:documentation>
<para>Identifies that the corresponding property value is complex.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="addPropertyValueComplex" type="fmsdk:complexPropertyValue">
<xsd:annotation>
<xsd:documentation>
<para>Identifies that the value set on the newly created property is complex.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence maxOccurs="unbounded">
<xsd:element name="createdProperty" type="fmsdk:propertyHandle">
<xsd:annotation>
<xsd:documentation>Specifies the name of the property added to the object or parent property.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>
<action seq="9" type="AddProperty">
<inputparams>
<param seq="1" type="handle">
<value>[].[securityViews].[db2_pkg]</value>
</param>
<param seq="2" type="i18nstring">
<value>securityView/functionSets</value>
</param>
</inputparams>
<domchanges/>
<result success="t">
<outputparams/>
</result>
</action>
</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="BuildObjectReference">
<xsd:annotation>
<xsd:documentation>
<para>Takes in a parent object and a child object, and returns a virtual reference prefixed with the ID of the parent and suffixed with the last part of the ID of the child. Can assist in the communication of a refobjViaShortcut property as a single virtual object reference.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="parentObject" type="fmsdk:objectHandle">
<xsd:annotation>
<xsd:documentation>Specifies the object to which the reference relates.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="childObjectHandle" type="fmsdk:objectHandle">
<xsd:annotation>
<xsd:documentation>Specifies the handle of the child object to which the reference relates.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="builtObjectReference" type="fmsdk:objectReference">
<xsd:annotation>
<xsd:documentation>Specifies the compound name of the output object reference.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="Cancel">
<xsd:annotation>
<xsd:documentation>
<para>Sets or resets the flag to cancel any currently running action.</para>
<para>Note: This is the only action that must be called in a separate thread, concurrent with another running action in the same session.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="cancelFlagOption">
<xsd:annotation>
<xsd:documentation>Represents the value of the cancel flag. When its value is set to 1, the next operation is cancelled and the flag is cleared (reset to 0).</xsd:documentation>
</xsd:annotation>
<xsd:simpleType>
<xsd:restriction base="xsd:NMTOKEN">
<xsd:enumeration value="0">
<xsd:annotation>
<xsd:documentation>Clears the cancel flag. Done immediately before calling an action, this clears any residual cancel setting.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="1">
<xsd:annotation>
<xsd:documentation>Sets the cancel flag.
															<indent>
<para>Use in a separate thread to stop waiting for the result of the last action.</para>
</indent>
<indent>
<para>The cancel action returns normally, and a cancelled exception is thrown by the thread running the cancelled action.</para>
</indent>
<indent>
<para>Cancel is checked at different points by different service components (including database servers). An exception is thrown as soon as the cancel has been detected and acted on by any part of the currently running action.</para>
</indent>
</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="CheckModel">
<xsd:annotation>
<xsd:documentation>
<para>Verifies the integrity of the model. </para>
<writerComment>For a complete list of the tests that are performed, see "Verify_Model_tests.xls".						</writerComment>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="verifyRoot" type="fmsdk:objectHandle" minOccurs="0" maxOccurs="unbounded">
<xsd:annotation>
<xsd:documentation>
<para>If specified, this object and its descendants are verified. If not specified, the entire model is verified.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="modelErrorsDom" type="fmsdk:node">
<xsd:annotation>
<xsd:documentation>
<para>Value conforms to the modelErrors.xsd. Contains the errors and warnings that were encountered as a result of running this action.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="ConformedDimensionsCandidates">
<xsd:annotation>
<xsd:documentation source="sapbw"/>
<xsd:documentation>
<para>Takes in dimensiont that represents the conformed dimension target, and returns the list of every multidimensional dimension that belongs to a different data source than the data source of the conformed dimension target. Use this action to generate candidates for ConformedDimensionsDetect.</para>
<para>Note: Applies to multidimensional dimensions (specifically of type SapBW) only.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:multidimensionalDimension"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:conformedDimensionCandidate" maxOccurs="unbounded"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="ConformedDimensionsCreate">
<xsd:annotation>
<xsd:documentation source="sapbw">
<para>Takes in a dimension that represents the conformed dimension target and a list of dimensions that represent conformed dimension candidates, and transforms the candidates into conformed dimensions of the target. The conformed dimension becomes a shortcut to the target dimension, and the references to its attributes are redirected to the query items of the target dimensions.</para>
<para>Note: Applies to multidimensional dimensions (specifically of type SapBW) only.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:targetDimension"/>
<xsd:element ref="fmsdk:conformedDimensionCandidate" maxOccurs="unbounded"/>
<xsd:element name="conformedDimensionsCreateErrorOption">
<xsd:annotation>
<xsd:documentation>
<para>Specifies what to do if one of the candidates cannot be conformed.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:simpleType>
<xsd:restriction base="xsd:NMTOKEN">
<xsd:enumeration value="0">
<xsd:annotation>
<xsd:documentation>Conformed dimensions are created for the candidates that can be conformed.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="1">
<xsd:annotation>
<xsd:documentation>No conformed dimensions are created and an exception is thrown specifying which candidates cannot be conformed.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="conformedDimension" type="fmsdk:objectHandle" minOccurs="0" maxOccurs="unbounded">
<xsd:annotation>
<xsd:documentation source="sapbw">
<para>A shortcut to a multidimensional dimension that serves as the conformed dimension target.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="ConformedDimensionsDetect">
<xsd:annotation>
<xsd:documentation source="sapbw">
<para>Takes in a dimension that represents the conformed dimension target and a list of dimensions that represent conformed dimension candidates, and returns the subset that can be conformed. Result is intended to serve as input to ConformedDimensionsCreate.</para>
<para>Note: Applies to multidimensional dimensions (specifically of type SapBW) only.</para>
<writerComment>(more details about conformed dimension can be found in CR0172 "DBC0033, SAP BW Conformed Dimension Support in Framework Manager.doc"</writerComment>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:targetDimension"/>
<xsd:element ref="fmsdk:conformedDimensionCandidate" maxOccurs="unbounded"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:conformedDimensionCandidate" minOccurs="0" maxOccurs="unbounded"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="Copy">
<xsd:annotation>
<xsd:documentation>
<para>Copies a set of objects and returns a reference to each created copy.</para>
<para>Relationships or relationship shortcuts cannot be copied directly. Instead, they are copied if either one or both of their ends is specified to be copied. If both ends are specified, then the copied relationship has both copies as its own ends. Otherwise, if only one end is specified, the copied relationship has the specified end's copy as one end but its other end remains the same as that for the source relationship. The copied relationship is placed in the nearest common ancestor folder or namespace of its two ends.</para>
<para>If you copy object A, and it has references to another object, object B that is also being copied, any references within the object A copy will refer to the object B copy.</para>
<para>If a package is specified, then the sole securityView it references is also copied and the copied package then references the copied securityView.</para>
<para>A copied object is always left unsecured, regardless of whether or not its corresponding source object was secured. For more information, see the SetObjectAccess action.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:targetParent"/>
<xsd:element ref="fmsdk:sourceObject" maxOccurs="unbounded"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="copiedObject" type="fmsdk:objectHandle" maxOccurs="unbounded">
<xsd:annotation>
<xsd:documentation>Represents the reference to the created copy.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>
<action seq="1" type="Copy">
<inputparams>
<param seq="1" type="handle">
<value>[oracle_gosales].[New Folder]</value>
</param>
<param seq="2" type="handle">
<value>[oracle_gosales].[EUROCONVERSION]</value>
</param>
</inputparams>
<domchanges/>
<result success="t">
<outputparams/>
</result>
</action>
</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="CountQuerySubject">
<xsd:annotation>
<xsd:documentation>
<para>Counts the number of rows in the result set of a given query subject or a dimension.</para>
<para>Note: For the query subject representing the facts of an SAP BW data source, the number of rows is always 1.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:querySubject"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="rowCount" type="xsd:nonNegativeInteger">
<xsd:annotation>
<xsd:documentation>Contains the number of rows in the result set. </xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited"/>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="Create">
<xsd:annotation>
<xsd:documentation>
<para>Creates a new object under a given target parent.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:group ref="fmsdk:inputParamsCreate"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="createdObject" type="fmsdk:objectHandle">
<xsd:annotation>
<xsd:documentation>Defines the object created by the action.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>
<action seq="1" type="Create">
<inputparams>
<param seq="1" type="integer">
<value>1</value>
</param>
<param seq="2" type="handle">
<value>[db2_gosales1]</value>
</param>
</inputparams>
<domchanges/>
<result success="t">
<outputparams/>
</result>
</action>
</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="CreateCalculationInFolder">
<xsd:annotation>
<xsd:documentation>
<para>Takes in a number of query items and creates standalone calculations in the specified folder or namespace.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:targetContainer"/>
<xsd:element name="sourceQueryItem" type="fmsdk:objectHandle" maxOccurs="unbounded">
<xsd:annotation>
<xsd:documentation>Specifies the input query items for the action.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="calculation" type="fmsdk:objectHandle" maxOccurs="unbounded">
<xsd:annotation>
<xsd:documentation>Represents the calculation that is created in the specified folder.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="CreateShortcut">
<xsd:annotation>
<xsd:documentation>
<para>Creates shortcuts to a given set of objects, places them under a given target, and returns a reference to each created shortcut.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:targetContainer" minOccurs="0"/>
<xsd:element name="shortcutSourceObject" type="fmsdk:objectHandle" maxOccurs="unbounded">
<xsd:annotation>
<xsd:documentation>
<para>Specifies the object for which a shortcut is created.</para>
<para>Note: The model does not support shortcuts to shortcuts. If the specified object is a shortcut, the new shortcut is created to its target, not to itself.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="relationshipShortcutOption" default="0" minOccurs="0">
<xsd:annotation>
<xsd:documentation>
<para>Specifies whether or not relationship shortcuts should be created.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:simpleType>
<xsd:restriction base="xsd:NMTOKEN">
<xsd:enumeration value="0">
<xsd:annotation>
<xsd:documentation>No relationship shortcuts are created.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="1">
<xsd:annotation>
<xsd:documentation>Relationship shortcuts are created to relationships found between the selected query subjects, and between any selected query subject and any other query subject in the model.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="2">
<xsd:annotation>
<xsd:documentation>Relationship shortcuts are created only for relationships found between the selected query subjects.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="createdShortcut" type="fmsdk:objectHandle" maxOccurs="unbounded">
<xsd:annotation>
<xsd:documentation>Represents the created shortcut.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>
<action seq="1" type="CreateShortcut">
<inputparams>
<param seq="1" type="handle">
<value>NULL</value>
</param>
<param seq="2" type="handle">
<value>[SQL_GoSales].[ORDERDETAIL]</value>
</param>
</inputparams>
<domchanges/>
<result success="t">
<outputparams/>
</result>
</action>
</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="DBBrowse">
<xsd:annotation>
<xsd:documentation>
<para>Expands a database tree view from which objects can be selected and imported. This action does not impact the model. The browse tree is intended as a base to modify for input to either the DBimport or ModelImport actions.</para>
<para>Note: Modifies input parameters.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:importSourceSpecDataSource"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>
<action seq="2" type="DBBrowse">
<inputparams>
<param seq="1" type="node">
<value>
<importSpec>
<item Name="SQL_GoSales" Type="database" Value="partial">
<item Name="GOSALES" Type="catalog" Value="partial">
<item Name="dbo" Type="schema" Value="partial">
<item Name="Tables" Type="tables" Value="true">
<item Name="CONVERSIONRATE" Type="table" Value="true"/>
<item Name="COUNTRY" Type="table" Value="true"/>
<item Name="EUROCONVERSION" Type="table" Value="true"/>
<item Name="ORDERDETAIL" Type="table" Value="true"/>
<item Name="ORDERHEADER" Type="table" Value="true"/>
<item Name="ORDERMETHOD" Type="table" Value="true"/>
<item Name="PRODUCT" Type="table" Value="true"/>
<item Name="PRODUCTFORECAST" Type="table" Value="true"/>
<item Name="PRODUCTLINE" Type="table" Value="true"/>
<item Name="PRODUCTTYPE" Type="table" Value="true"/>
<item Name="RETURNEDITEM" Type="table" Value="true"/>
<item Name="RETURNREASON" Type="table" Value="true"/>
<item Name="SALESBRANCH" Type="table" Value="true"/>
<item Name="SALESSTAFF" Type="table" Value="true"/>
<item Name="SALESTARGET" Type="table" Value="true"/>
</item>
<item Name="Views" Type="views" Value="false"/>
<item Name="Synonyms" Type="synonyms" Value="false"/>
<item Name="Procedures" Type="procedures" Value="false"/>
<item Name="Functions" Type="functions" Value="false"/>
</item>
</item>
</item>
</importSpec>
</value>
</param>
</inputparams>
<result success="t">
<outputparams/>
</result>
</action>
</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="DBImport">
<xsd:annotation>
<xsd:documentation>
<para>Imports database objects. This action impacts the model.</para>
<writerComment>Please consult "FM Relational Database Import FS.doc" for more information.</writerComment>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:targetContainer"/>
<xsd:element ref="fmsdk:importSourceSpecDataSource"/>
<xsd:choice>
<xsd:group ref="fmsdk:dbImportInputParametersRelational"/>
<xsd:group ref="fmsdk:dbImportInputParametersSAPBW"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>
<action seq="2" type="DBImport">
<inputparams>
<param seq="1" type="handle">
<value>[SQL_GoSales]</value>
</param>
<param seq="2" type="node">
<value>
<importSpec>
<item Name="SQL_GoSales" Type="database" Value="partial">
<item Name="GOSALES" Type="catalog" Value="partial">
<item Name="dbo" Type="schema" Value="partial">
<item Name="Tables" Type="tables" Value="true">
<item Name="CONVERSIONRATE" Type="table" Value="true"/>
<item Name="COUNTRY" Type="table" Value="true"/>
<item Name="EUROCONVERSION" Type="table" Value="true"/>
<item Name="ORDERDETAIL" Type="table" Value="true"/>
<item Name="ORDERHEADER" Type="table" Value="true"/>
<item Name="ORDERMETHOD" Type="table" Value="true"/>
<item Name="PRODUCT" Type="table" Value="true"/>
<item Name="PRODUCTFORECAST" Type="table" Value="true"/>
<item Name="PRODUCTLINE" Type="table" Value="true"/>
<item Name="PRODUCTTYPE" Type="table" Value="true"/>
<item Name="RETURNEDITEM" Type="table" Value="true"/>
<item Name="RETURNREASON" Type="table" Value="true"/>
<item Name="SALESBRANCH" Type="table" Value="true"/>
<item Name="SALESSTAFF" Type="table" Value="true"/>
<item Name="SALESTARGET" Type="table" Value="true"/>
</item>
<item Name="Views" Type="views" Value="false"/>
<item Name="Synonyms" Type="synonyms" Value="false"/>
<item Name="Procedures" Type="procedures" Value="false"/>
<item Name="Functions" Type="functions" Value="false"/>
</item>
</item>
</item>
</importSpec>
</value>
</param>
<param seq="3" type="integer">
<value>0</value>
</param>
<param seq="4" type="integer">
<value>1</value>
</param>
<param seq="5" type="integer">
<value>1</value>
</param>
<param seq="6" type="integer">
<value>0</value>
</param>
<param seq="7" type="integer">
<value>0</value>
</param>
<param seq="8" type="integer">
<value>0</value>
</param>
<param seq="9" type="integer">
<value>0</value>
</param>
</inputparams>
<result success="t">
<outputparams/>
</result>
</action>
</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="DBImportJoinsOnKeys">
<xsd:annotation>
<xsd:documentation>
<para>RESERVED for internal use. Detects relationships in a given set of query subjects. Relationships are detected through the primary keys and foreign keys in a given data source against a specific data source. Used by TransformRelationship when the value for its joinOptionProcessKeys input parameter is 1 (use primary and foreign keys). This action impacts the model.</para>
<para>Note: Not applicable for SAP BW data sources.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="joinOptionProcessInternalOrExternalJoins">
<xsd:annotation>
<xsd:documentation>
<para>Specifies whether to create joins between selected query subjects or between each of them and others.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:simpleType>
<xsd:restriction base="xsd:NMTOKEN">
<xsd:enumeration value="0">
<xsd:annotation>
<xsd:documentation>Joins are created between selected query subjects.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="1">
<xsd:annotation>
<xsd:documentation>Joins are created between each selected query subject and existing query subjects.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
</xsd:element>
<xsd:element ref="fmsdk:joinOptionProcessOuterJoinOption"/>
<xsd:element ref="fmsdk:dataSource"/>
<xsd:element ref="fmsdk:querySubject" maxOccurs="unbounded"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="DBMakePhysicalSqlName">
<xsd:annotation>
<xsd:documentation>
<para>RESERVED for internal use. Converts an arbitrary string into a valid SQL name. This action does not impact the model.</para>
<para>Note: Not applicable for SAP BW data sources.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="dbObjectName" type="xsd:string">
<xsd:annotation>
<xsd:documentation>
<para>The original name.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="sqlObjectName" type="xsd:string">
<xsd:annotation>
<xsd:documentation>
<para>The output name that is suitable for the Cognos Query Engine parser.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="DBRelationshipPath">
<xsd:annotation>
<xsd:documentation>
<para>RESERVED for internal use. Retrieves all joins, using primary and foreign keys, between two database tables, based on corresponding query subject names. This action does not impact the model.</para>
<para>Note: Not applicable for SAP BW data sources.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="ImportSpec" type="fmsdk:node">
<xsd:annotation>
<xsd:documentation>
<para>The database ImportSpec. This ImportSpec node contains at least two child nodes representing the two tables. Each child node must contain a "namePattern" element. For more information, see the file called ImportSpec.xsd.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="expressionList" type="fmsdk:stringCollection">
<xsd:annotation>
<xsd:documentation>Represents the list of joins between the two input database tables.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="ImportIQD">
<xsd:annotation>
<xsd:documentation>
<para>Imports an IQD (Impromptu Query Definition) file. This action creates a database query subject based on the sql statement specified in the IQD file.</para>
<para>Note: This action is used by Cognos Metrics Loader (PD).</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="IQDFilePath" type="xsd:string">
<xsd:annotation>
<xsd:documentation>
<para>The IQD file path location.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="ImportedFolder" type="fmsdk:objectHandle">
<xsd:annotation>
<xsd:documentation>
<para>A folder in the model where the query subject will be created in.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="IQDFileSpec" type="fmsdk:node">
<xsd:annotation>
<xsd:documentation>
<para>The specification of the IQD file. This spec node conforms to either the "dbConnectionsSpec.xsd" or "iqdFileSpec.xsd".</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="TestConnectionString">
<xsd:annotation>
<xsd:documentation>
<para>Tests a relational or multidimensional database connection string.</para>
<para>Note: This action is used by Cognos Metrics Loader (PD).</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="connectionString" type="xsd:string">
<xsd:annotation>
<xsd:documentation>
<para>The raw or full connection string.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="username" type="xsd:string">
<xsd:annotation>
<xsd:documentation>
<para>The optional user name (if the first param is a raw connection string specified a prompt for user name.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="password" type="xsd:string">
<xsd:annotation>
<xsd:documentation>
<para>The optional password (if the first param is a raw connection string specified a prompt for password.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="DBRelease">
<xsd:annotation>
<xsd:documentation>
<para>Releases the connections to all databases currently connected. Should be called after a DBImport or a TransformRelationship action. This action does not impact the model.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>
<action seq="3" type="DBRelease">
<inputparams/>
<domchanges/>
<result success="t">
<outputparams/>
</result>
</action>
</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="DBStoredProcedure">
<xsd:annotation>
<xsd:documentation>
<para>RESERVED for internal use.</para>
<para>Imports an individual stored procedure. Used for creating a query subject from a database stored procedure. This action impacts the model.</para>
<para>Note: Not applicable for SAP BW data sources.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="storedProcedureQuerySubject" type="fmsdk:objectHandle">
<xsd:annotation>
<xsd:documentation>
<para>A stored procedure query subject in the model.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="storedProcedureSpec" type="fmsdk:node">
<xsd:annotation>
<xsd:documentation>
<para>An ImportSpec node that contains the specified stored procedure in the data source. This specified item must contain the "namePattern" element. For more information, see the file called ImportSpec.xsd.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="Delete">
<xsd:annotation>
<xsd:documentation>
<para>Removes a set of objects and/or properties.</para>
<para>Whenever an object is deleted, any references to it become broken. Each broken reference is handled as follows:</para>
<bulletList>
<listElement>If the property containing the reference has allowMissingTarget=true specified in the mapping section of the file CR1 Behaviors.xml, the property is left untouched. If the object containing the reference property has a status property (for example, a relationship) or is a child of an object that has a status property (for example, a query subject), the status property is set to needsReevaluation. To see which objects have a status property, see the Framework Manager model schema.</listElement>
<listElement>If the property containing the reference does not have allowMissingTarget=true, the deletion cascades as follows:
					<bulletList>
<listElement>the property is deleted, and</listElement>
<listElement>if the property is mandatory (as defined in the model schema) with respect to its parent (property or object), that parent is also deleted. The deletion propagates up the ancestry until either the deleted parent is an object (such as a query subject or query item), or a property that is non-mandatory with respect to its parent.</listElement>
</bulletList>
</listElement>
<listElement>Typically, properties that allow missing (broken) references are complex properties that contain valuable information which would be lost if the property were deleted, and that can be manually repaired. Examples include expressions and compound keys.</listElement>
<listElement>Properties that do not allow missing references are simple properties. Examples include shortcut targets and relationship ends.</listElement>
</bulletList>
<para>If a package is specified, its corresponding security view is also deleted. If the package is role-based, any object specified within that package that is not referenced by any other role-based package has its secured property reset to unsecured.</para>
<para>Note: Not applicable to query items and query item folders belonging to query subjects of type database or multidimensional.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:group ref="fmsdk:inputParamsDelete" maxOccurs="unbounded"/>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>
<action seq="1" type="Delete">
<inputparams>
<param seq="1" type="handle">
<value>[].[packages].[P3]</value>
</param>
</inputparams>
<domchanges/>
<result success="t">
<outputparams/>
</result>
</action>
</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="DoReportsExist">
<xsd:annotation>
<xsd:documentation>
<para>RESERVED for future use.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="DoQueryServicesRequest">
<xsd:annotation>
<xsd:documentation>
<para>RESERVED for internal use. Executes a query services (QSAPI) request.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="qsapiRequestSpec" type="fmsdk:node">
<xsd:annotation>
<xsd:documentation>
<para>For more information, see the files qsapi2.xsd and query_cr1.xsd.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:qsapiResponseSpec"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="doUpgrade">
<xsd:annotation>
<xsd:documentation>RESERVED for internal use only. Upgrades the model to conform to the current schema version.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:modelPath"/>
<xsd:element ref="fmsdk:schemaPath"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="EvaluateSecurityView">
<xsd:annotation>
<xsd:documentation>
<para>Takes in a set of security views and/or packages and returns a unique set of pairs, each pair containing an object and its corresponding rule. The includeRule is set to either Include or Hide. The process is as follows:</para>
<bulletList>
<listElement>Initialize result set for this view to be empty.</listElement>
<listElement>Iterate through each set S in the view and group all viewRefs in a set V and all objects in a set O</listElement>
<listElement>Recursively evaluate every view in V and add each object/rule combination to the result set for this view. In the case of a conflict, that is if the same object occurs repeatedly in the views with conflicting rules, Include takes precedence over Hide.</listElement>
<listElement>Process every object in O in order of shallowest, or nearest to the root namespace in the model, to the deepest, and do the following:
				<bulletList>
<listElement>If the includeRule is Include or Hide, add the object and all its descendants to the result set with the given rule. If any of the objects being added already exist in the result set, then replace its current rule.</listElement>
<listElement>If the includeRule is Exclude, then remove the object and all its descendants from the result set.</listElement>
</bulletList>
</listElement>
</bulletList>
<para>If multiple views are passed into the action, each is evaluated on its own, and all result sets are unioned with Include taking precedence over Hide in the case of conflicts.</para>
<para>Note: Not applicable to models based on SAP BW data sources in this release.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:securityViewOrPackage" maxOccurs="unbounded"/>
<xsd:element name="roleBasedViewEvaluationLevel" default="0" minOccurs="0">
<xsd:annotation>
<xsd:documentation>
<para>When role-based packages are specified to this action, this option specifies whether or not to merge their evaluation results with those for the "Everyone" role.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:simpleType>
<xsd:restriction base="xsd:NMTOKEN">
<xsd:enumeration value="0">
<xsd:annotation>
<xsd:documentation>When evaluating role-based packages, do not merge the evaluation results with those for the "Everyone" role.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="1">
<xsd:annotation>
<xsd:documentation>When evaluating role-based packages, merge the evaluation results with those for the "Everyone" role.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:reportObject" maxOccurs="unbounded"/>
<xsd:element ref="fmsdk:includeRule"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="ExpandParameters">
<xsd:annotation>
<xsd:documentation>Expands (resolves) a parameterized string based on the current settings of session parameters and parameter maps. Examples of session parameters are "account.defaultName", "account.personalInfo.userName", and "runLocale".</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="parameterizedValue" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Represents the input parameter value.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="expandedValue" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Represents the expanded value of the input parameter.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="ExplainLogFile">
<xsd:annotation>
<xsd:documentation>Provides an explanation for an action found in an action log.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:choice>
<xsd:element name="actionSpec" type="fmsdk:node">
<xsd:annotation>
<xsd:documentation>
<para>Specifies the action.</para>
<writerComment>Need a schema for this?</writerComment>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="actionXML" type="xsd:string">
<xsd:annotation>
<xsd:documentation>
<para>Specifies the action.</para>
<writerComment>Need a schema for this?</writerComment>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:choice>
<xsd:element name="explainLevel">
<xsd:annotation>
<xsd:documentation>Specifies the level of explanation that will be provided. When set to 1, detailed explanations are provided.</xsd:documentation>
</xsd:annotation>
<xsd:simpleType>
<xsd:restriction base="xsd:NMTOKEN">
<xsd:enumeration value="0">
<xsd:annotation>
<xsd:documentation>A summary-level explanation is returned for the given action.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="1">
<xsd:annotation>
<xsd:documentation>A detailed explanation is returned for the given action.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="explainMessage" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Contains the text of the explanation.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="ExportTranslations">
<xsd:annotation>
<xsd:documentation>
<para>Builds a translations file from the multilingual properties in the model.</para>
<para>Note: SAP BW variable information is stored using custom properties. Locale-specific information is stored in these custom properties, but is currently not exported to, or imported from, translation files.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:translationsFilePath"/>
<xsd:sequence minOccurs="0">
<xsd:element name="exportLocales" type="fmsdk:localeCollection">
<xsd:annotation>
<xsd:documentation>
<para>The set of locales to be exported. All must exist in the model. If not specified, all locales in the model are exported.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:sequence minOccurs="0">
<xsd:element name="exportTranslationsRootObject" maxOccurs="unbounded">
<xsd:annotation>
<xsd:documentation>
<para>The set of objects from which to extract the multilingual values that are restricted to this object or any of its descendants. If no objects are specified, all objects in the model are processed.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:sequence minOccurs="0">
<xsd:element ref="fmsdk:selectedObjectsProcessingLevel"/>
</xsd:sequence>
</xsd:sequence>
</xsd:sequence>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>
<action seq="1" type="ExportTranslations">
<inputparams>
<param seq="1" type="i18nstring">
<value>E:\sanity\fm_690\win32\bin\myTranslations.csv</value>
</param>
<param seq="2" type="stringCollection">
<value>
<stringCollection>
<item>fr-ca</item>
</stringCollection>
</value>
</param>
</inputparams>
<domchanges/>
<result success="t">
<outputparams/>
</result>
</action>
</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="ExpressionQuery">
<xsd:annotation>
<xsd:documentation>Executes an expression and returns the result set.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:createAutoSummary"/>
<xsd:element name="expression" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Represents the expression to be executed.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element ref="fmsdk:maximumRowsToBeRetrieved"/>
<xsd:element ref="fmsdk:executionReportDetailLevel"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:qsapiResponseSpec"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="FindOrCreateDataSource">
<xsd:annotation>
<xsd:documentation>Used as part of centralized management of data sources. Given a set of data source identifiers, the action looks up a data source in the model and if it is not found, creates a new one.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="dataSourceIndicator" type="xsd:string">
<xsd:annotation>
<xsd:documentation>
<para>Place holder only. Sets the value to a symbolic indicator of the data source that is used in qualifying table names in the SQL of query subjects.</para>
<para>Note: Also an output parameter, if overwritten during execution.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element ref="fmsdk:crnDataSourceName"/>
<xsd:sequence minOccurs="0">
<xsd:element ref="fmsdk:catalogName"/>
<xsd:sequence minOccurs="0">
<xsd:element ref="fmsdk:schemaName"/>
<xsd:sequence minOccurs="0">
<xsd:element name="cubeName" type="xsd:string">
<xsd:annotation>
<xsd:documentation>
<para>Specifies the name of a cube.</para>
<para>Note: Applies only to multidimensional data sources</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:sequence>
</xsd:sequence>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:dataSource"/>
<xsd:element name="findOrCreateDataSourceStatus">
<xsd:annotation>
<xsd:documentation>
<para>Indicates whether a matching data source existed in the model or needed to be created as a result of executing this action.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:simpleType>
<xsd:restriction base="xsd:NMTOKEN">
<xsd:enumeration value="0">
<xsd:annotation>
<xsd:documentation>Data source already exists in the model.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="1">
<xsd:annotation>
<xsd:documentation>Data source was created.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>
<action seq="1" type="FindOrCreateDataSource">
<inputparams>
<param seq="1" type="i18nstring">
<value/>
</param>
<param seq="2" type="i18nstring">
<value>oracle_gosales</value>
</param>
<param seq="3" type="i18nstring">
<value/>
</param>
<param seq="4" type="i18nstring">
<value>GOSALES</value>
</param>
</inputparams>
<domchanges/>
</action>
</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="GenerateID">
<xsd:annotation>
<xsd:documentation>
<para>RESERVED for internal use.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="GetApplicationVersion">
<xsd:annotation>
<xsd:documentation>Returns the current Framework Manager SDK version.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="version" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Contains the current version of the Framework Manager SDK.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="GetCandidateRelationships">
<xsd:annotation>
<xsd:documentation>
<para>Takes in a pair of query subjects and determines if there are any relationships between them.</para>
<para>Note: Not applicable to models based on SAP BW data sources.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="firstRelationshipEndCandidate" type="fmsdk:objectHandle">
<xsd:annotation>
<xsd:documentation>Specifies the first query subject.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="secondRelationshipEndCandidate" type="fmsdk:objectHandle">
<xsd:annotation>
<xsd:documentation>Specifies the second query subject.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="relationshipSearchType">
<xsd:annotation>
<xsd:documentation>Specifies the type of search to perform. When set to 0, a quick search is performed. When set to 1, an exhaustive search is performed.</xsd:documentation>
</xsd:annotation>
<xsd:simpleType>
<xsd:restriction base="xsd:NMTOKEN">
<xsd:enumeration value="0">
<xsd:annotation>
<xsd:documentation>Quick. Finds any relationship having both:
															<bulletList>
<listElement>one of its ends matching one of the ends passed into this action, AND</listElement>
<listElement>its other end matching the other end passed into this action, OR any shortcut to it.</listElement>
</bulletList>
</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="1">
<xsd:annotation>
<xsd:documentation>Exhaustive. Finds any relationship having:
															<bulletList>
<listElement>one of its ends matching one of the ends passed into this action, OR any shortcut to it, AND </listElement>
<listElement>its other end matching the other object passed into this action, OR any shortcut to it.</listElement>
</bulletList>
</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="relatonship" type="fmsdk:objectHandle" minOccurs="0" maxOccurs="unbounded">
<xsd:annotation>
<xsd:documentation>
<para>Represents a relationship object in the model.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="GetContentManagerGateway">
<xsd:annotation>
<xsd:documentation>
<para>Returns the gateway configuration parameter.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence maxOccurs="unbounded">
<xsd:element ref="fmsdk:gatewayURI"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="GetDataSourceConnectionSelections">
<xsd:annotation>
<xsd:documentation>
<para>RESERVED for internal use.</para>
<para>Returns user selection for ambiguous connection and/or sign-on for a given data source that is set by SelectDataSourceConnection.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:dataSourceName"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:crnDataSourceConnectionName"/>
<xsd:element ref="fmsdk:crnDataSourceConnectionSignonName"/>
<xsd:element ref="fmsdk:crnDataSourceConnectionSignonUser"/>
<xsd:element ref="fmsdk:crnDataSourceConnectionSignonPassword"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="ClearDataSourceCache">
<xsd:annotation>
<xsd:documentation>
<para>Clears the cache of all datasource connection information for the current session. ClearDataSourceCache should be called when logging off or resetting any cached datasource values. This action does not impact the model.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="GetDataSourceInfo">
<xsd:annotation>
<xsd:documentation>
<para>RESERVED for internal use.</para>
<para>Returns information about a given data source.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:dataSourceName"/>
<xsd:element name="dataSourceQuery" type="xsd:string">
<xsd:annotation>
<xsd:documentation>
<para>Note: Also an output parameter, if overwritten during execution.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="interfaceClass" type="xsd:string">
<xsd:annotation>
<xsd:documentation>
<para>Note: Also an output parameter, if overwritten during execution.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="GetDefaultLocale">
<xsd:annotation>
<xsd:documentation>
<para>Returns the default locale in the model. For more information, see SetDefaultLocale.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="defaultLocale" type="xsd:language">
<xsd:annotation>
<xsd:documentation>
<para>Value is that of the project/defaultLocale property in the Framework Manager model.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="GetMatchingModelLocale">
<xsd:annotation>
<xsd:documentation>
<para>Takes in a locale ID and returns the ID of the locale in the model that best matches it, using CRN's standard locale-matching algorithm. If multiple matches are found, the first matching locale is retuend. If no matches are found, the default locale (refer to SetDefaultLocale action) is returned.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="candidateLocale" type="xsd:language"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:modelLocale"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>
<action seq="1" type="Delete">
<inputparams>
<param seq="1" type="handle">
<value>[].[packages].[P3]</value>
</param>
</inputparams>
<domchanges/>
<result success="t">
<outputparams/>
</result>
</action>
</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="GetNearestCommonParentObject">
<xsd:annotation>
<xsd:documentation>Takes in a set of objects and returns the nearest common ancestor between them.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:object" maxOccurs="unbounded"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="nearestCommonAncestor" type="fmsdk:objectHandle">
<xsd:annotation>
<xsd:documentation>Returns the nearest parent object for the input object.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="GetObjectAncestry">
<xsd:annotation>
<xsd:documentation>
<para>Returns the ancestry of a given object, in top-down order starting from the root.</para>
<para>Note: The object passed in is also returned as one of the ancestors.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:object"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence maxOccurs="unbounded">
<xsd:element name="ancestor">
<xsd:annotation>
<xsd:documentation>
<para>Specifies an ancestor of the object passed to the action.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="GetPackageInclusionsForObject">
<xsd:annotation>
<xsd:documentation>
<para>Returns information about an object, specifically whether or not the object is included, excluded or hidden with respect to every package or security view in the model. The role-based packages for which the object is unsecured, that is no rule is specified for it or any of its ancestors, are not returned.</para>
<para>A triplet is returned for each security view or package that gets returned, consisting of:</para>
<bulletList>
<listElement>the same source report object passed into the action,</listElement>
<listElement>the current security view or package, and</listElement>
<listElement>the inclusion rule for the report object current security view or package.</listElement>
</bulletList>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:reportObject"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="fmsdk:reportObject"/>
<xsd:element ref="fmsdk:securityViewOrPackage"/>
<xsd:element ref="fmsdk:includeRule"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="GetPassportFromCM">
<xsd:annotation>
<xsd:documentation>
<para>Takes in a set of credentials and attempts to authenticate to the Cognos 10 server whose location is specified in the configuration parameter called sdk. If authentication is successful, a session is established with the Cognos 10 server and the session's passport ID is returned. If authentication fails, an exception is thrown.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="credentialsSpec" type="fmsdk:node">
<xsd:annotation>
<xsd:documentation>
<para>Must conform to the formFieldVars section of BI Bus Header specification. It can be NULL, which means that the authentication is attempted as anonymous.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="passportID" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Specifies the ID of the established Cognos 10 server session.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="GetPromptValues">
<xsd:annotation>
<xsd:documentation>Returns a list of prompt values set during the session, either as a list of prompt-value pairs, or as a DOM element.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:choice>
<xsd:sequence>
<xsd:element name="promptNames" type="fmsdk:stringCollection">
<xsd:annotation>
<xsd:documentation>Specifies the names of the prompts.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="promptValues" type="fmsdk:stringCollection">
<xsd:annotation>
<xsd:documentation>Specifies the prompt values.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
<xsd:element name="parametersNode" type="fmsdk:node">
<xsd:annotation>
<xsd:documentation>A node that conforms to the "parameters" element of query services request (for more information, refer to the "Parameters" section of the Cognos 10 SDK documentation).</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:choice>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="GetQueryProcessingMode">
<xsd:annotation>
<xsd:documentation>
<para>RESERVED for internal use.</para>
<para>Returns the query processing model, databaseOnly versus limitedLocal, for a given data source.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:dataSourceName"/>
<xsd:element name="processingMode" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Specifies the mode of processing for this data source.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="GetRuntimeParameters">
<xsd:annotation>
<xsd:documentation>
<para>Returns session parameters and their values for the current user for the current session.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="getRuntimeParameterType">
<xsd:annotation>
<xsd:documentation>
<para>Specifies whether to retrieve original parameter values or overrides. For more information, see SetRuntimeParameters.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:simpleType>
<xsd:restriction base="xsd:NMTOKEN">
<xsd:enumeration value="0">
<xsd:annotation>
<xsd:documentation>Only original values are requested, no overrides.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="1">
<xsd:annotation>
<xsd:documentation>Only overridden values are requested.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="runtimeParametersSpec" type="fmsdk:node">
<xsd:annotation>
<xsd:documentation>
<para>Specified in runtimeParameters.xsd.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="GetSecurityObjectUsage">
<xsd:annotation>
<xsd:documentation>
<para>Determines the set of security objects found in the access list of each security view in the model, and returns this set in the form of a one-to-many mapping between the security object and the security views that contain it.</para>
<para>Note: A security object is either an account, a group, or a role.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="packageType" default="0" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Specifies whether to return information pertaining to regular packages, role-based packages, or both.</xsd:documentation>
</xsd:annotation>
<xsd:simpleType>
<xsd:restriction base="xsd:NMTOKEN">
<xsd:enumeration value="0">
<xsd:annotation>
<xsd:documentation>Return information pertaining to both "regular" and "role-based" packages.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="1">
<xsd:annotation>
<xsd:documentation>Return information pertaining to "regular" packages only.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="2">
<xsd:annotation>
<xsd:documentation>Return information pertaining to "role-based" packages only.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="securityObjectSpec" type="fmsdk:node">
<xsd:annotation>
<xsd:documentation>
<para>Conforms to the securityObjectSpec.xsd.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="GetSupportedLocales">
<xsd:annotation>
<xsd:documentation>Returns all locales that exist in the model, as found in the project/locales property.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="modelLocales" type="fmsdk:localeCollection">
<xsd:annotation>
<xsd:documentation>Represents all locales that are supported for the model.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="ImportTranslations">
<xsd:annotation>
<xsd:documentation>
<para>Imports a set of translations into the model.</para>
<para>For any multilingual property, its value in the keyLocale parameter is searched against the corresponding keyLocale column in the translations file. If a matching record is found in the translations file, then any other value for the property, that is any other value in the other locales, is updated with the value in the corresponding locale (if one exists) from the found translations record. For more information about the translations file format, see ExportTranslations.</para>
<para>If the value being updated refers to an object name which collides with the name of another object, then the update still occurs but the name of the value is made unique by appending a sequence number to it.</para>
<para>Note: SAP BW variable information is stored using custom properties. Locale-specific information is stored in these custom properties, but is currently not exported to, or imported from, translation files.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:group ref="fmsdk:inputParamsImportTranslations"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="updatedMultilingualProperty" type="fmsdk:propertyHandle" minOccurs="0" maxOccurs="unbounded">
<xsd:annotation>
<xsd:documentation>
<para>Represents the set of multilingual properties that were updated as a result of this action.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>
<action seq="1" type="ImportTranslations">
<inputparams>
<param seq="1" type="i18nstring">
<value>E:\sanity\fm_690\win32\bin\languages.csv</value>
</param>
<param seq="2" type="i18nstring">
<value>en-us</value>
</param>
<param seq="3" type="stringCollection">
<value>
<stringCollection>
<item>fr-ca</item>
</stringCollection>
</value>
</param>
</inputparams>
<domchanges/>
<result success="t">
<outputparams/>
</result>
</action>
</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="IsModelViewPresent">
<xsd:annotation>
<xsd:documentation>
<para>Determines if a given package has already been published to the Cognos 10 server and, if so, returns its path as found in Cognos 10, as well as corresponding versioning information.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:regularPackage"/>
<xsd:element ref="fmsdk:publishTargetType"/>
<xsd:element ref="fmsdk:targetLocation"/>
<xsd:element ref="fmsdk:targetPackageName"/>
<xsd:element name="packageNames" type="xsd:string" minOccurs="0">
<xsd:annotation>
<xsd:documentation>
<para>Lists the names of the packages that are found in Cognos 10 that match the name of the selected package.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:packageExists"/>
<xsd:element name="currentRetentionValue" type="xsd:integer">
<xsd:annotation>
<xsd:documentation>
<para>Specifies the retention value from Cognos 10 for model objects with the selected package.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="existingModelCount" type="xsd:nonNegativeInteger">
<xsd:annotation>
<xsd:documentation>
<para>Specifies the number of models versions that already exist in the package in Cognos 10.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="LinkModel">
<xsd:annotation>
<xsd:documentation>
<para>Establishes a link to the given object under the selected parent.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="linkParent">
<xsd:annotation>
<xsd:documentation>
<para>Specifies the parent object that contains the link in the current model. The object must be either a namespace, a folder, the parameterMaps container object, or the dataSources container object.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="targetModelConnection" type="xsd:string">
<xsd:annotation>
<xsd:documentation>
<para>Specifies the connection string of the project that contains the object to be linked.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="linkObjectPath" type="xsd:string">
<xsd:annotation>
<xsd:documentation>
<para>Specifies the object to link to in the target model and is encoded as an Xpath-like expression.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="persistLink">
<xsd:annotation>
<xsd:documentation>
<para>Specifies whether to persist the link or not.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:simpleType>
<xsd:restriction base="xsd:NMTOKEN">
<xsd:enumeration value="0">
<xsd:annotation>
<xsd:documentation>The link only exists for the current user session and is not saved when the model is saved.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="1">
<xsd:annotation>
<xsd:documentation>The link is saved when the model is saved.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>
<action seq="1" type="LinkModel">
<inputparams>
<param seq="1" type="handle">
<value>[link]</value>
</param>
<param seq="2" type="i18nstring">
<value>E:\my_projects\link_segment_master\New Folder\NewFolder.cpf</value>
</param>
<param seq="3" type="i18nstring">
<value>/project/namespace/folder</value>
</param>
<param seq="4" type="integer">
<value>0</value>
</param>
</inputparams>
<domchanges/>
<result success="t">
<outputparams/>
</result>
</action>
</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="MakeExpressionGlobal">
<xsd:annotation>
<xsd:documentation>
<para>Transforms an embedded filter or calculation into a stand-alone filter or calculation, and replaces the embedded filter or calculation with a reference to the newly created object.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:expression"/>
<xsd:element name="suggestedName" type="xsd:string" minOccurs="0">
<xsd:annotation>
<xsd:documentation>
<para>If not specified, a default name is provided for the newly created object.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="createdExpressionObject">
<xsd:annotation>
<xsd:documentation>
<para>Specifies either a calculation or filter.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="MakeObjectNameUnique">
<xsd:annotation>
<xsd:documentation>
<para>Takes in an object type and a target parent and returns a name for the specified object type that is unique in the context of the specified target parent.</para>
<para>The base name for the object can be optionally specified as the newObjectName parameter. If not specified, a reasonable default is provided. The base name is returned as the new name if it is unique in the target context, otherwise a unique name is created by appending a sequence number to the base name.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="objectType" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Specifies the type of the input object.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element ref="fmsdk:targetParent"/>
<xsd:sequence minOccurs="0">
<xsd:element ref="fmsdk:newObjectName"/>
<xsd:sequence minOccurs="0">
<xsd:element name="uniquenessNamingSpecification">
<xsd:annotation>
<xsd:documentation>Specifies the action to take in the event the new object name already exists.</xsd:documentation>
</xsd:annotation>
<xsd:simpleType>
<xsd:restriction base="xsd:NMTOKEN">
<xsd:enumeration value="0">
<xsd:annotation>
<xsd:documentation>If the value of newObjectName collides with another object name, an appropriate sequence number is appended to it.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="1">
<xsd:annotation>
<xsd:documentation source="1">If the value of newObjectName collides with another object name, it is prefixed with "Copy of".</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="2">
<xsd:annotation>
<xsd:documentation>The value of newObjectName is always prefixed with "Shortcut to".</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="3">
<xsd:annotation>
<xsd:documentation>If the value of newObjectName collides with another object name, it is prefixed with "Shortcut to".</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
</xsd:element>
</xsd:sequence>
</xsd:sequence>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="uniqueObjectName" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Represents the assigned unique name for the new object.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="Merge">
<xsd:annotation>
<xsd:documentation>
<para>Merges the specified source objects into a new model query. Sources can be query subjects, dimensions, query items, query item folders, measures, measure folders, shortcuts, calculations, filters, relationships and relationship shortcuts. Selecting a relationship or a relationship shortcut has the same effect as selecting the left and right end objects as the sources. The Merge action may optionally create new relationships (or relationship shortcuts) between the target and the query subjects that were related to any of the source query subjects, unless the other end of the relationship also appears in the selected sources, and the expression of the relationship includes a query item that no longer appears in the target. </para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="mergeSourceObject" type="fmsdk:objectHandle" maxOccurs="unbounded">
<xsd:annotation>
<xsd:documentation>Specifies the source object to merge.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="mergeCreateRelationship">
<xsd:annotation>
<xsd:documentation>Specifies whether or not to create a relationship (and relationship shortcut) between the new merged query subject and the query subjects (and shortcuts) that were related to the sources. </xsd:documentation>
</xsd:annotation>
<xsd:simpleType>
<xsd:restriction base="xsd:NMTOKEN">
<xsd:enumeration value="0">
<xsd:annotation>
<xsd:documentation>Retain the merge source objects passed into this action.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="1">
<xsd:annotation>
<xsd:documentation>Delete the merge source objects passed into this action.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="mergeResultTargetObject" type="fmsdk:objectHandle">
<xsd:annotation>
<xsd:documentation>
<para>Specifies the merged target query subject that was either specified as the mergeTargetObject input parameter or created if the input parameter was NULL. </para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>
<action seq="1" type="Merge">
<inputparams>
<param seq="1" type="handle">
<value>NULL</value>
</param>
<param seq="2" type="handle">
<value>[oracle_gosales].[New Query Subject1]</value>
</param>
<param seq="3" type="handle">
<value>[oracle_gosales].[New Query Subject2]</value>
</param>
<param seq="4" type="integer">
<value>0</value>
</param>
</inputparams>
<domchanges/>
<result success="t">
<outputparams/>
</result>
</action>
</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="ModelBrowse">
<xsd:annotation>
<xsd:documentation>
<para>RESERVED for future use. </para>
<para>Expands a node in a model browse tree. This action does not impact the model.</para>
<para>Note: This action modifies input parameters.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:modelPath"/>
<xsd:element ref="fmsdk:importSourceSpecModel"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="ModelDiff">
<xsd:annotation>
<xsd:documentation>
<para>RESERVED for future use.</para>
<para>Compares the current package in the model with a version that already exists in Cognos 10 and returns a difference result document.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="passport" type="xsd:string">
<xsd:annotation>
<xsd:documentation>
<para>The passport to a valid Cognos 10 session.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element ref="fmsdk:regularPackage"/>
<xsd:element name="outputResults" type="xsd:string">
<xsd:annotation>
<xsd:documentation>
<para>An XML document that describes the difference results.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="returnCode" type="xsd:nonNegativeInteger">
<xsd:annotation>
<xsd:documentation>
<para>A numeric return code to indicate success or failure.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="ModelImport">
<xsd:annotation>
<xsd:documentation>
<para>Imports a Framework Manager model into a specified namespace or folder in a Framework Manager model. This action impacts the model.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:modelPath"/>
<xsd:element ref="fmsdk:importSourceSpecModel"/>
<xsd:element ref="fmsdk:targetContainer"/>
<xsd:element ref="fmsdk:nameConflictOptionImport"/>
<xsd:sequence minOccurs="0">
<xsd:element name="displaySummaryOption" default="0">
<xsd:annotation>
<xsd:documentation>
<para>Specifies whether to display information regarding the results of the action.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:simpleType>
<xsd:restriction base="xsd:NMTOKEN">
<xsd:enumeration value="0">
<xsd:annotation>
<xsd:documentation>Do not display summary information.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="1">
<xsd:annotation>
<xsd:documentation>Display summary information.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
</xsd:element>
<xsd:sequence minOccurs="0">
<xsd:element name="containerConflictOption" default="0">
<xsd:annotation>
<xsd:documentation>
<para>Specifies how to process namespaces or folder objects that are in conflict with existing objects.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:simpleType>
<xsd:restriction base="xsd:NMTOKEN">
<xsd:enumeration value="0">
<xsd:annotation>
<xsd:documentation>Do nothing for conflicting namespaces or folders, except what is specified for the nameConflictOptionImport parameter.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="1">
<xsd:annotation>
<xsd:documentation>Do not import the namespace or folder but keep processing its children, using the existing namespace or folder as the target parent for the copied children. In this case, the value for the nameConflictOptionImport parameter is not taken into effect for namespaces or folders.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
</xsd:element>
<xsd:sequence minOccurs="0">
<xsd:element name="emptyContainerOption" default="1">
<xsd:annotation>
<xsd:documentation>
<para>Specifies whether or not to permit empty namespaces or folders to be imported.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:simpleType>
<xsd:restriction base="xsd:NMTOKEN">
<xsd:enumeration value="0">
<xsd:annotation>
<xsd:documentation>Do not import empty namespaces or folders.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="1">
<xsd:annotation>
<xsd:documentation>Import empty namespaces or folders.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
</xsd:element>
</xsd:sequence>
</xsd:sequence>
</xsd:sequence>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>
<action seq="1" type="ModelImport">
<inputparams>
<param seq="1" type="i18nstring">
<value>../temp/CRN_model_import/CRN_model_import.cpf</value>
</param>
<param seq="2" type="cclnode">
<value>
<item Name="Model" Type="folder" Value="true" uniqueName="[oracle_gosales]">
<item Name="CONVERSIONRATE" Type="querySubject" Value="true" uniqueName="[oracle_gosales].[CONVERSIONRATE]"/>
<item Name="COUNTRY" Type="querySubject" Value="true" uniqueName="[oracle_gosales].[COUNTRY]"/>
<item Name="EUROCONVERSION" Type="querySubject" Value="true" uniqueName="[oracle_gosales].[EUROCONVERSION]"/>
</item>
</value>
</param>
<param seq="3" type="handle">
<value>[oracle_gosales]</value>
</param>
<param seq="4" type="integer">
<value>1</value>
</param>
</inputparams>
<domchanges/>
<result success="t">
<outputparams/>
</result>
</action>
</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="Modify">
<xsd:annotation>
<xsd:documentation>
<para>Updates the value of an existing simple property, that is, one that has no child properties.</para>
<para>In most cases, the property is updated with the specified value and the lastChanged property of the parent object is also updated accordingly. However, additional behavior can occur depending on the type of the property, as follows:</para>
<bulletList>
<listElement>
<para>If the specified property is the object's name, all references to that object, or any of its children, are updated with its name.</para>
<para>For example, if the name of a query subject in namespace NS is being modified from "CTRY" to "COUNTRY", any object references with the value of [NS]. [CTRY] are updated to [NS.[COUNTRY]. Also, if the query subject has a query item named COUNTRY_CODE, any reference to that query item is also updated from [NS].[CTRY].[COUNTRY_CODE] to [NS].[COUNTRY].[COUNTRY_CODE].</para>
</listElement>
<listElement>If the specified property is the name of a package, the package's corresponding security view is also updated with the same name.</listElement>
<listElement>If the specified property is the object being referenced on one end of a relationship or relationship shortcut, the parentage of the relationship or relationship shortcut needs to be re-assessed, as it must exist in the nearest common ancestor of its two ends.</listElement>
<listElement>
<para>If the property being modified is the secured property of an object, all references to that object within role-based packages are removed.</para>
<writerComment>See GMS068 "Object Based Security".</writerComment>
</listElement>
<listElement>
<para>If the specified property is a calculation's data type, its usage and aggregate rules may also change in accordance with the aggregate transformation rules of Framework Manager.</para>
<writerComment>For more information, see "FM Usage AggregateTransformations.doc"</writerComment>
</listElement>
<listElement>If the specified property is a query item's usage, and
						<bulletList>
<listElement>it has changed from fact to some other value, both its regularAggregate and semiAggregate properties are set to unsupported.</listElement>
<listElement>it has changed from some value other than fact, both its regularAggregate and semiAggregate properties are set to sum.</listElement>
<listElement>it has changed from some value other to fact, its existing value for the corresponding promptType property must be set to serverDetermined.</listElement>
</bulletList>
</listElement>
<listElement>If the specified property is a query item's promptType and the corresponding usage property has a value of fact, then the value being set on promptType must be serverDetermined.
					</listElement>
<listElement>If the specified property is a package's maxVersions property, and the value passed in is an empty string, then the property is removed from the model. Removal means that model versioning is turned off when the package is published to Cognos 10.</listElement>
</bulletList>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:group ref="fmsdk:inputParamsModify"/>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>
<action seq="1" type="Modify">
<inputparams>
<param seq="1" type="handle">
<value>/O/name[0]/O/[]</value>
</param>
<param seq="2" type="i18nstring">
<value>db2</value>
</param>
</inputparams>
<domchanges/>
<result success="t">
<outputparams/>
</result>
</action>
</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="ModifyComplex">
<xsd:annotation>
<xsd:documentation>
<para>Updates the value of an existing complex property, one that contains other properties. </para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="complexProperty" type="fmsdk:propertyHandle">
<xsd:annotation>
<xsd:documentation>
<para>A property that can contain child properties as defined in the schema.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:choice>
<xsd:element name="newComplexValueString" type="fmsdk:complexPropertyValue">
<xsd:annotation>
<xsd:documentation>Specifies that the value of the complex property being updated is a string. </xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="newComplexValueSpec" type="fmsdk:node">
<xsd:annotation>
<xsd:documentation>Must conform to the same specification as the property in question. For more information, see the Framework Manager model schema.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:choice>
<xsd:element name="forceModify" type="xsd:boolean" default="false" minOccurs="0">
<xsd:annotation>
<xsd:documentation>
<para>If true, an update is forced, even if the specified value is not valid. </para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="Move">
<xsd:annotation>
<xsd:documentation>
<para>Moves a set of objects to a new target parent object. The following behavior may also occur:</para>
<bulletList>
<listElement>If an object is being moved to a different namespace, and the name of the object collides with that of another object in that namespace, the object is made unique by appending a sequence number to it.</listElement>
<listElement>A relationship or relationship shortcut must always exist in the nearest common ancestor of its two ends. Whenever a query subject, or shortcut to a query subject, is moved, the location of any relationship to it may also be moved in order to meet this constraint. Conversely, if the user tries to explicitly move a relationship, then either or both of its ends may also be moved in order to meet this constraint.</listElement>
</bulletList>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:group ref="fmsdk:inputParamsMove"/>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>
<action seq="2" type="Move">
<inputparams>
<param seq="1" type="handle">
<value>[New Namespace]</value>
</param>
<param seq="2" type="handle">
<value>[SQL_GoSales].[CONVERSIONRATE]</value>
</param>
<param seq="3" type="handle">
<value>[SQL_GoSales].[COUNTRY]</value>
</param>
<param seq="4" type="handle">
<value>[SQL_GoSales].[EUROCONVERSION]</value>
</param>
</inputparams>
<domchanges/>
<result success="t">
<outputparams/>
</result>
</action>
</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="PopulateParameterMap">
<xsd:annotation>
<xsd:documentation>Populates a parameter map object based on entries in a specified file, where every key-value pair is delimited and appears on a separate line.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:parameterMap"/>
<xsd:element name="parameterMapEntriesSourceFilePath" type="fmsdk:delimitedFilePath">
<xsd:annotation>
<xsd:documentation>Specifies the path name of the source file containing the entries for the parameter map.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="nameConflictOptionPopulateParameterMap" default="0" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Specifies the action to take in the event that a naming conflict occurs.</xsd:documentation>
</xsd:annotation>
<xsd:simpleType>
<xsd:restriction base="xsd:NMTOKEN">
<xsd:enumeration value="0">
<xsd:annotation>
<xsd:documentation>Update existing entries.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="1">
<xsd:annotation>
<xsd:documentation>Create new entries, but make their names unique by appending a sequence number to them.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="PreviewSecurityFilter">
<xsd:annotation>
<xsd:documentation>Security filters can be based on other security filters defined for user groups and roles. In such cases, this action constructs an expression based on all inherited security filters, when it is passed a security filter definition.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="securityFilter" type="fmsdk:propertyHandle">
<xsd:annotation>
<xsd:documentation>Specifies the input security filter definition.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="inheritedSecurityFilterExpression" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Specifies an expression that results from the AND-ing of relevant security filters.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="Publish">
<xsd:annotation>
<xsd:documentation>
<para>Publishes a package to either the network or Cognos 10.</para>
<para>Builds a new model containing the subset of the existing model as defined in the package. The published model contains the objects included in the package. Any objects that are required by the included objects are also published, to ensure that no broken object references exist in the published model and no unexpected cross-join errors occur.</para>
<para>If object security exists in the model, then the security views for all role-based packages are written to the published model; however, the only objects in these views are those being published. Objects that are not being published are ignored. A special role-based view named with an underscore (_) is also created, which contains an evaluation of only the secured objects within the root namespace hierarchy.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:group ref="fmsdk:inputParamsPublish"/>
</xsd:complexType>
</xsd:element>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence minOccurs="0">
<xsd:element name="publishedPackageDisplayPath" type="xsd:string">
<xsd:annotation>
<xsd:documentation>
<para>Specifies the path to the published package using the active locale. For more information, see the "SetActiveLocale" action.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:sequence minOccurs="0">
<xsd:element name="adminAccessSpec" type="fmsdk:node">
<xsd:annotation>
<xsd:documentation>
<para>Must conform to the securityObjectSpec.xsd. Its value represents the list of those who can administer (which includes republishing and deleting) a package that has been published to Cognos 10. The list is usually the same as the list found in the Framework Manager model as the value of the property package/adminAccess/decisionRole. If the package is being published for the first time and the list in the Framework Manager model is empty, the value is set to whomever has SetPolicy permission on the published package in Cognos 10.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
<xsd:element ref="fmsdk:externalizeReport" minOccurs="0"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>
<action seq="11" type="Publish">
<inputparams>
<param seq="1" type="handle">
<value>[].[packages].[db2_pkg]</value>
</param>
<param seq="2" type="integer">
<value>2</value>
</param>
<param seq="3" type="i18nstring">
<value>/content</value>
</param>
<param seq="4" type="i18nstring">
<value>db2_pkg</value>
</param>
<param seq="5" type="integer">
<value>0</value>
</param>
<param seq="6" type="integer">
<value>0</value>
</param>
<param seq="7" type="integer">
<value>0</value>
</param>
</inputparams>
<domchanges/>
</action>
</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="RemoveLocale">
<xsd:annotation>
<xsd:documentation>
<para>Removes a set of locales from the model.</para>
<para>For every locale that is requested for removal, the following occurs:</para>
<bulletList>
<listElement>The instance of the locale property under project/locales that matches the locale ID is deleted.</listElement>
<listElement>The locale instance of any multilingual property whose locale ID matches is deleted. For a description of multilingual properties, see AddLocale.</listElement>
</bulletList>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="removeLocales" type="fmsdk:localeCollection">
<xsd:annotation>
<xsd:documentation>Specifies the set of locales to be removed from the model.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>
<action seq="1" type="RemoveLocale">
<inputparams>
<param seq="1" type="i18nstring">
<value>ja-jp</value>
</param>
</inputparams>
<domchanges/>
<result success="t">
<outputparams/>
</result>
</action>
</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="RemoveRuntimeParameters">
<xsd:annotation>
<xsd:documentation>Removes specified session parameters from the session.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:parameterName" maxOccurs="unbounded"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>
<action seq="1" type="RemoveRuntimeParameters">
<inputparams>
<param seq="1" type="i18nstring">
<value>runLocale</value>
</param>
</inputparams>
<domchanges/>
<result success="t">
<outputparams/>
</result>
</action>
</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="ReorderBefore">
<xsd:annotation>
<xsd:documentation>
<para>Reorders a set of object(s) before a given target parent, or at the end if the target object is NULL. All specified objects must belong to the same parent.</para>
<para>Note: Not applicable to query items and query item folders belonging to multidimensional query subjects.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="reorderObject" type="fmsdk:objectHandle" maxOccurs="unbounded">
<xsd:annotation>
<xsd:documentation>
<para>Specifies the object being reordered.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="reorderBeforeObject" type="fmsdk:objectHandle">
<xsd:annotation>
<xsd:documentation>
<para>Specifies that all objects are moved before this object. Parameter can be NULL, in which case the reordered objects are moved to the end.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>
<action seq="1" type="ReorderBefore">
<inputparams>
<param seq="1" type="handle">
<value>[oracle_gosales].[EUROCONVERSION].[EUROYEAR]</value>
</param>
<param seq="2" type="handle">
<value>[oracle_gosales].[EUROCONVERSION].[COUNTRYCODE]</value>
</param>
</inputparams>
<domchanges/>
<result success="t">
<outputparams/>
</result>
</action>
</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="Repair">
<xsd:annotation>
<xsd:documentation>
<para>Reruns a Verify action on a given set of objects, and runs any possible repairs on them, if necessary.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="repairObject" type="fmsdk:objectReference" maxOccurs="unbounded">
<xsd:annotation>
<xsd:documentation>Specifies the object to be repaired.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>
<action seq="1" type="Repair">
<inputparams>
<param seq="1" type="i18nstring">
<value>[oracle_gosales].[New Query Subject]</value>
</param>
<param seq="2" type="i18nstring">
<value>[oracle_gosales].[New Query Subject]</value>
</param>
<param seq="3" type="i18nstring">
<value>[oracle_gosales].[New Query Subject]</value>
</param>
<param seq="4" type="i18nstring">
<value>[oracle_gosales].[New Query Subject]</value>
</param>
<param seq="5" type="i18nstring">
<value>[oracle_gosales].[New Query Subject]</value>
</param>
<param seq="6" type="i18nstring">
<value>[oracle_gosales].[New Query Subject]</value>
</param>
<param seq="7" type="i18nstring">
<value>[oracle_gosales].[New Query Subject]</value>
</param>
</inputparams>
<domchanges/>
<result success="t">
<outputparams/>
</result>
</action>
</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="RepairReports">
<xsd:annotation>
<xsd:documentation>
<para>RESERVED for future use.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="ResetPromptValues">
<xsd:annotation>
<xsd:documentation>
<para>When no argument is specified, all prompts set during the session are removed.</para>
<para>The overloaded form, with the single argument, only sets a flag to either use prompt values that are set during the session, or not use them.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence minOccurs="0">
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="useSetPromptValues" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Specifies whether prompt values that are set during the session are to be used.</xsd:documentation>
</xsd:annotation>
<xsd:simpleType>
<xsd:restriction base="xsd:NMTOKEN">
<xsd:enumeration value="1">
<xsd:annotation>
<xsd:documentation>Use the prompt values set during the session</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="0">
<xsd:annotation>
<xsd:documentation>Do not use the prompt values set during the session.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>
<action seq="2" type="ResetPromptValues">
<inputparams/>
<domchanges/>
<result success="t">
<outputparams/>
</result>
</action>
</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="RetargetObjectReferences">
<xsd:annotation>
<xsd:documentation>
<para>Changes a set of specified object references to point to a specified object.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="retargetObjectReferencesSpec" type="fmsdk:node">
<xsd:annotation>
<xsd:documentation>Specified in the file called retargetObjectReferencesSpec.xsd.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="updatedRefobj" type="fmsdk:propertyHandle" minOccurs="0" maxOccurs="unbounded">
<xsd:annotation>
<xsd:documentation>
<para>Specifies the object reference properties updated as a result of executing this action.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="RetrieveQueryItemParameters">
<xsd:annotation>
<xsd:documentation>
<para>Retrieves and returns key-value pairs for a given query item-based parameter map.</para>
<para>Note: Query item-based parameter maps for SAP BW data sources are not supported in this release.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="queryItemBasedParameterMap" type="fmsdk:objectHandle">
<xsd:annotation>
<xsd:documentation>Specifies the query item-based parameter map for which to return the key-value pairs.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="retrievedKeys" type="fmsdk:stringCollection">
<xsd:annotation>
<xsd:documentation>Represents the keys retrieved for the specified parameter map.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="retrievedValues" type="fmsdk:stringCollection">
<xsd:annotation>
<xsd:documentation>Represents the values retrieved for the specified parameter map.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="SegmentModel">
<xsd:annotation>
<xsd:documentation>
<para>Takes in a specified object and creates a new project that contains a copy of the specified object and all its descendents. The specified object is then removed from the current project and replaced with a link to the copied object in the newly created project.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="segmentObject" type="fmsdk:objectHandle">
<xsd:annotation>
<xsd:documentation>Specifies the object to be segmented, whose type must be one of the following: namespace, folder, parameter map, data source.
											</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="segmentTargetModelPath" type="xsd:string">
<xsd:annotation>
<xsd:documentation>
<para>The path of the model to be created that will contain the new segment.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="sourceControlRepositoryPath" type="xsd:string" minOccurs="0">
<xsd:annotation>
<xsd:documentation>
<para>Specifies that the model to be created will be placed under source control, and will be in the path within the repository, as specified here.</para>
<para>Value syntax is dependent on the source control system in use.</para>
<writerComment>We should still clarify this syntax.</writerComment>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>
<action seq="1" type="SegmentModel">
<inputparams>
<param seq="1" type="handle">
<value>[oracle_gosales].[New Folder]</value>
</param>
<param seq="2" type="i18nstring">
<value>E:\my_projects\link_segment_master\New Folder\New Folder.cpf</value>
</param>
<param seq="3" type="i18nstring">
<value/>
</param>
</inputparams>
<domchanges/>
<result success="t">
<outputparams/>
</result>
</action>
</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="SelectDataSourceConnection">
<xsd:annotation>
<xsd:documentation>
<para>Captures user selections for connection and/or signon information, when more than one is available to this user for a data source.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:crnDataSourceName"/>
<xsd:element ref="fmsdk:crnDataSourceConnectionName"/>
<xsd:element ref="fmsdk:crnDataSourceConnectionSignonName" minOccurs="0"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>
<action seq="1" type="SelectDataSourceConnection">
<inputparams>
<param seq="1" type="i18nstring">
<value>FM_UNITTESTS_SAMPLEDB_OR</value>
</param>
<param seq="2" type="i18nstring">
<value>Market_Research</value>
</param>
</inputparams>
<domchanges/>
<result success="t">
<outputparams/>
</result>
</action>
</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="SelectDataSourceCredentials">
<xsd:annotation>
<xsd:documentation>
<para>Captures user selections for data source signon information when none is provided in the connection string.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:crnDataSourceName"/>
<xsd:element ref="fmsdk:crnDataSourceConnectionName"/>
<xsd:element ref="fmsdk:crnDataSourceConnectionSignonUser"/>
<xsd:element ref="fmsdk:crnDataSourceConnectionSignonPassword"/>
<xsd:element ref="fmsdk:crnDataSourceConnectionCubePassword" minOccurs="0"/>
<xsd:element ref="fmsdk:crnDataSourceConnectionCubePasswordEncrypted" minOccurs="0"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>
<action seq="2" type="SelectDataSourceCredentials">
<inputparams>
<param seq="1" type="i18nstring">
<value>FM_UNITTESTS_SAMPLEDB_OR</value>
</param>
<param seq="2" type="i18nstring">
<value>Market_Research</value>
</param>
<param seq="3" type="i18nstring">
<value>GOMR0104</value>
</param>
<param seq="4" type="i18nstring">
<value>GOMR0104</value>
</param>
</inputparams>
<domchanges/>
<result success="t">
<outputparams/>
</result>
</action>
</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="SelectDataSourceDom">
<xsd:annotation>
<xsd:documentation>
<para>Captures user selections for connection and/or signon information. This action works similarly to the SelectDataSourceConnection and SelectDataSourceCredentials actions. The difference is in the input parameters.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="ConnectionDom" type="fmsdk:node">
<xsd:annotation>
<xsd:documentation>
<para>Value conforms to RS_API/specification/QF_XML_API.xsd.</para>
<para>When connecting to Cognos Planning or Cognos Finance, an ASTicket element is required.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>
<action seq="1" type="SelectDataSourceDom">
<inputparams>
<param seq="1" type="node">
<value>
<connection>
<QFProviderType value="MQProvider"/>
<productLocale value="en"/>
<runLocale value="en-us"/>
<serviceID value="RSVP"/>
<sessionID value="G89C2G48hvhGh8yM44yhvMdvyydvj4CG92yjCM2y"/>
<CAMPassport value="010:deeeb2a5-9588-11d9-9583-9f7582494569:0293004495"/>
<contentManagerURI value="http://127.0.0.1:9300/p2pd/servlet"/>
<dataSource value="/content/package[@name=&apos;cubePassword11&apos;]/model[@name=&apos;2005-03-15T19:38:26.121Z&apos;]"/>
<connection>
<QFProviderType value="Database"/>
<dataSource value="cubePassword"/>
<cubePassword encrypted="" value="olap"/>
<searchPath value="CAMID(&quot;:&quot;)/dataSource[@name=&apos;cubePassword&apos;]/dataSourceConnection[@name=&apos;cubePassword&apos;]"/>
</connection>
</connection>
</value>
</param>
</inputparams>
<domchanges/>
<result success="t">
<outputparams/>
</result>
</action>
</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="SetActiveLocale">
<xsd:annotation>
<xsd:documentation>
<para>Sets the active locale in the current user session.</para>
<para>The active locale is the locale that is used by the Framework Manager SDK as the basis for specifying default object names. For example, in a model that has both English and French locales, if you call the Create action to create a query subject and do not specify a name for it:</para>
<bulletList>
<listElement>If the active locale is English, the default name of the object will be "New Query Subject".</listElement>
<listElement>If the active locale is French, the default name of the object will be "Nouveau sujet de requeste".</listElement>
</bulletList>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:modelLocale"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>
<action seq="1" type="SetActiveLocale">
<inputparams>
<param seq="1" type="i18nstring">
<value>en-us</value>
</param>
</inputparams>
<domchanges/>
<result success="t">
<outputparams/>
</result>
</action>
</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="SetDefaultLocale">
<xsd:annotation>
<xsd:documentation>
<para>Changes the default locale, the property project/defaultLocale, in the model. All object references are also updated, as the default locale is the locale in which they are encoded.</para>
<para>For example, in a model that contains both English and French locales, where the default locale is English, if an object has the name "object" in English and "objet" in French, all references to that object appear as "object". If this action is called on the same model to change the default locale to French, then all references to the same object will now be changed to "objet".</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:modelLocale"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>
<action seq="1" type="SetDefaultLocale">
<inputparams>
<param seq="1" type="i18nstring">
<value>en-us</value>
</param>
</inputparams>
<domchanges/>
<result success="t">
<outputparams/>
</result>
</action>
</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="SetObjectAccess">
<xsd:annotation>
<xsd:documentation>
<para>Sets object-based security in the model.</para>
<para>For more information, see the file called objectAccess.xsd.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:object" maxOccurs="unbounded"/>
<xsd:element ref="fmsdk:objectAccess"/>
<xsd:element name="unspecifiedRolesProcessing" default="0" minOccurs="0">
<xsd:annotation>
<xsd:documentation>
<para>Specifies what the rule should be set for roles that exist in the model but not accounted for in the "objectAccess" parameter above.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:simpleType>
<xsd:restriction base="xsd:NMTOKEN">
<xsd:enumeration value="0">
<xsd:annotation>
<xsd:documentation>Remove any existing "allow" or "deny" rule(s) specified for the role(s).</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="1">
<xsd:annotation>
<xsd:documentation>For any of the specified objects that are directly secured, leave all existing security rights specified on the give role(s) as is.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="2">
<xsd:annotation>
<xsd:documentation>Leave all existing security rights specified on the give role(s) as is for all specified objects, regardless of whether they are directly secured or secured via a parent object that is directly secured.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="SetPackageLocales">
<xsd:annotation>
<xsd:documentation>
<para>Updates the list of locales in a given package, in the package/locales property. This list represents the set of locales that appear in the published model. For example, in a model containing English, French, and German, if you publish a package, and this package has only English and French in its locales list, the published model will only contain English and French property values.</para>
<para>Updating the list of locales has the following restrictions:</para>
<bulletList>
<listElement>The default locale must always appear in this list. For more information, see SetDefaultLocale.</listElement>
<listElement>If this package includes another package, the set of locales must contain as a minimum all of the locales specified in that other package.</listElement>
</bulletList>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:regularPackage"/>
<xsd:sequence minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="fmsdk:modelLocale"/>
</xsd:sequence>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>
<action seq="6" type="SetPackageLocales">
<inputparams>
<param seq="1" type="handle">
<value>[].[packages].[db2_pkg]</value>
</param>
<param seq="2" type="i18nstring">
<value>en-us</value>
</param>
</inputparams>
<domchanges/>
<result success="t">
<outputparams/>
</result>
</action>
</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="SetPromptValue">
<xsd:annotation>
<xsd:documentation>Associates a value, simple or complex, with a prompt name for the duration of a Framework Manager session. The values are used in subsequent actions that involve expressions containing prompts, for example TestQuerySubject, ExpressionQuery, or for modifying the definition of a model querySubject that uses that prompt.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:promptName"/>
<xsd:choice>
<xsd:element ref="fmsdk:promptValue"/>
<xsd:element name="promptValueDom" type="fmsdk:node">
<xsd:annotation>
<xsd:documentation>
<para>Specifies a complex prompt value (for more information,  refer to the "Parameters" section of the Cognos 10 SDK documentation).</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="SetQueryItemParameterMap">
<xsd:annotation>
<xsd:documentation>
<para>Sets the definition of a specified parameter map based on a pair of key-value query items. The key and value query items must belong to the same query subject.</para>
<para>Note: Query item-based parameter maps for SAP BW data sources are not supported in this release.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="parameterMap" type="fmsdk:objectHandle">
<xsd:annotation>
<xsd:documentation>Contains a collection of key-value pairs used to query a database.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="parameterMapKeyQueryItem" type="fmsdk:objectHandle">
<xsd:annotation>
<xsd:documentation>Specifies the key for the query item.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="parameterMapValueQueryItem" type="fmsdk:objectHandle">
<xsd:annotation>
<xsd:documentation>Specifies the value for the query item.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>
<action seq="2" type="SetQueryItemParameterMap">
<inputparams>
<param seq="1" type="handle">
<value>[].[parameterMaps].[pM3]</value>
</param>
<param seq="2" type="handle">
<value>[SQL_GoSales].[PRODUCT].[PRODUCTNUMBER]</value>
</param>
<param seq="3" type="handle">
<value>[SQL_GoSales].[PRODUCT].[PRODUCTNAME]</value>
</param>
</inputparams>
<domchanges/>
<result success="t">
<outputparams/>
</result>
</action>
</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="SetSecurityViewAccess">
<xsd:annotation>
<xsd:documentation>
<para>Takes in either a package or a security view and a list of user groups or roles and does the following:</para>
<bulletList>
<listElement>If the specified object is a security view, its corresponding access list is updated with the specified user groups or roles. The access list of a security view specifies those who can use the published package corresponding to the security view.</listElement>
<listElement>If the specified object is a package, its corresponding admin access list is updated with the specified user groups or roles. The admin access list of a package specifies those who can administer the published package, including republishing and deleting it.</listElement>
</bulletList>
<para>Note: Security views are not supported for models based on SAP BW data sources in this release.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:securityViewOrPackage"/>
<xsd:element name="securePackage">
<xsd:annotation>
<xsd:documentation>Specifies whether or not the package is to be secured.</xsd:documentation>
</xsd:annotation>
<xsd:simpleType>
<xsd:restriction base="xsd:NMTOKEN">
<xsd:enumeration value="0">
<xsd:annotation>
<xsd:documentation>Not secured. If specified, the corresponding input accessList parameter is ignored.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="1">
<xsd:annotation>
<xsd:documentation>Secured. If specified, the corresponding input accessList must be specified.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
</xsd:element>
<xsd:element name="accessListSpec" type="fmsdk:node">
<xsd:annotation>
<xsd:documentation>
<para>Must conform to the securityObjectSpec.xsd. Its value specifies the list of those who can access the package or security view for report authoring and/or execution purposes in Cognos 10.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>
<action seq="3" type="SetSecurityViewAccess">
<inputparams>
<param seq="1" type="handle">
<value>[].[securityViews].[db2_pkg]</value>
</param>
<param seq="2" type="integer">
<value>1</value>
</param>
<param seq="3" type="cclnode">
<value>
<securityObjects>
<securityObject type="group">
<displayPath>Everyone [Directory &gt; Cognos]</displayPath>
<cmSearchPath>CAMID(&quot;::Everyone&quot;)</cmSearchPath>
</securityObject>
</securityObjects>
</value>
</param>
</inputparams>
<domchanges/>
<result success="t">
<outputparams/>
</result>
</action>
</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="SetRuntimeParameters">
<xsd:annotation>
<xsd:documentation>
<para>Changes the value of a session parameter for the duration of the Framework Manager session. Effectively overrides the value initially associated with this parameter, for the current session.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="fmsdk:parameterName"/>
<xsd:element ref="fmsdk:parameterValue"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>
<action seq="1" type="SetRuntimeParameters">
<inputparams>
<param seq="1" type="i18nstring">
<value>runLocale</value>
</param>
<param seq="2" type="i18nstring">
<value>EN</value>
</param>
</inputparams>
<domchanges/>
<result success="t">
<outputparams/>
</result>
</action>
</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="SetSecurityViewDefinition">
<xsd:annotation>
<xsd:documentation>
<para>Replaces the definition for a given security view or package.</para>
<para>Note: Security views are not supported for models based on SAP BW data sources in this release.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:securityViewOrPackage"/>
<xsd:sequence maxOccurs="unbounded">
<xsd:choice>
<xsd:element ref="fmsdk:reportObject"/>
<xsd:element name="securityView" type="fmsdk:objectHandle">
<xsd:annotation>
<xsd:documentation>
<para>Specifies a security view object in the model.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:choice>
<xsd:element ref="fmsdk:includeRule"/>
</xsd:sequence>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>
<action seq="2" type="SetSecurityViewDefinition">
<inputparams>
<param seq="1" type="handle">
<value>[].[securityViews].[db2_pkg]</value>
</param>
<param seq="2" type="handle">
<value>[db2_gosales1]</value>
</param>
<param seq="3" type="integer">
<value>2</value>
</param>
</inputparams>
<domchanges/>
<result success="t">
<outputparams/>
</result>
</action>
</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="shouldUpgrade">
<xsd:annotation>
<xsd:documentation>
<para>RESERVED for internal use only. Compares the model version and the schema version to determine if the model needs upgrading.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:modelPath"/>
<xsd:element ref="fmsdk:schemaPath"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="modelSchemaVersionComparisonResult">
<xsd:annotation>
<xsd:documentation>Represents the result of the comparison between the model and the schema.</xsd:documentation>
</xsd:annotation>
<xsd:simpleType>
<xsd:restriction base="xsd:NMTOKEN">
<xsd:enumeration value="-1">
<xsd:annotation>
<xsd:documentation>The specified schema path does not match the schema path that exists in the model.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="0">
<xsd:annotation>
<xsd:documentation>The schema version that exists in the specified model matches the version of the specified schema.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="1">
<xsd:annotation>
<xsd:documentation>The schema version that exists in the specified model is older than the version of the specified schema.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="2">
<xsd:annotation>
<xsd:documentation>The schema version that exists in the specified model is more recent than the version of the specified schema.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
</xsd:element>
<xsd:element name="modelVersionNumber" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Represents the version number of the model.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="schemaVersionNumber" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Represents the version number of the schema.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="ShowImpact">
<xsd:annotation>
<xsd:documentation>RESERVED for internal use.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="passport" type="xsd:string">
<xsd:annotation>
<xsd:documentation>
<para>Specifies a passport for a valid Cognos 10 session.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="selectedModelItems" type="fmsdk:node">
<xsd:annotation>
<xsd:documentation>
<para>No specification yet.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element ref="fmsdk:gatewayURI"/>
<xsd:element name="outputResults" type="xsd:string">
<xsd:annotation>
<xsd:documentation>
<para>An XML document that describes the search results.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="returnCode" type="xsd:nonNegativeInteger">
<xsd:annotation>
<xsd:documentation>
<para>A numeric return code that indicates success or failure.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="SQLPlanAssociation">
<xsd:annotation>
<xsd:documentation>
<para>Plans, and possibly executes, a relationship between two query subjects or dimensions based on a given join expression. Plan means to generate and prepare the SQL, and describe the result set.</para>
<writerComment>[get details from CQE]</writerComment>
<para>Note: Not applicable to models based on SAP BW data sources.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="relationshipName" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Specifies the name of the relationship to be generated.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="leftEndReference" type="fmsdk:objectReference">
<xsd:annotation>
<xsd:documentation>Specifies the reference for the left end of the relationship to be generated.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="leftEndCardinality" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Specifies the cardinality for the left end of the relationship to be generated.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="rightEndReference" type="fmsdk:objectReference">
<xsd:annotation>
<xsd:documentation>Specifies the reference for the right end of the relationship to be generated.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="rightEndCardinality" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Specifies the cardinality for the right end of the relationship to be generated.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element ref="fmsdk:expression"/>
<xsd:element ref="fmsdk:createAutoSummary"/>
<xsd:element ref="fmsdk:maximumRowsToBeRetrieved"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:qsapiResponseSpec"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="TestDataSource">
<xsd:annotation>
<xsd:documentation>
<para>Tests a data source object based on its corresponding connection information stored in Cognos 10. An exception is thrown if the test is unsuccessful.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:dataSource"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="TestQuerySubject">
<xsd:annotation>
<xsd:documentation>
<para>Executes a request based on specified objects or their contained items and returns the result set.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:reportItemOrReportItemContainer" maxOccurs="unbounded"/>
<xsd:element ref="fmsdk:maximumRowsToBeRetrieved"/>
<xsd:sequence minOccurs="0">
<xsd:element name="applyRelevantDesignModeFilters" type="xsd:boolean" default="true">
<xsd:annotation>
<xsd:documentation>Specifies the filters to apply.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:sequence minOccurs="0">
<xsd:element ref="fmsdk:executionReportDetailLevel"/>
<xsd:sequence minOccurs="0">
<xsd:element name="suppressDivisionByZeroErrors" type="xsd:boolean" default="true" minOccurs="0">
<xsd:annotation>
<xsd:documentation>
<para>If set to true, suppresses possible division-by-zero errors, and a NULL value is returned.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:sequence>
</xsd:sequence>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:qsapiResponseSpec"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="TransformCreateStarGrouping">
<xsd:annotation>
<xsd:documentation>
<para>Creates a stand-alone grouping for a given set of query subjects or dimensions. The result is a set of query subjects that includes a single fact query subject and its neighboring query subjects or, a set of dimensions that include a measure dimension and its neighbouring dimensions. The created grouping is stand-alone in that all relationships within the grouping are self-contained and do not refer to any object outside the grouping.
</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:querySubjectOrDimension" maxOccurs="unbounded"/>
<xsd:sequence minOccurs="0">
<xsd:element name="transformType" default="0">
<xsd:annotation>
<xsd:documentation>
<para>The primary distinction.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:simpleType>
<xsd:restriction base="xsd:NMTOKEN">
<xsd:enumeration value="0">
<xsd:annotation>
<xsd:documentation>Create Shortcut. Creates a shortcut to every source query subject (or dimension), and a relationship shortcut for every relationship that exists for each source query subject (or dimension). </xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="1">
<xsd:annotation>
<xsd:documentation>Move. Moves all source query subjects (or dimensions) to the specified target, except for any having a relationship where the other end of the relationship is not one of the source query subjects (or dimensions). In this case, creates a shortcut and new relationships between the other source query subjects (or dimensions), or the shortcuts created for them.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
</xsd:element>
<xsd:sequence minOccurs="0">
<xsd:element name="transformTarget" default="1">
<xsd:annotation>
<xsd:documentation>
<para>Specifies where the new grouping will be placed.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:simpleType>
<xsd:restriction base="xsd:NMTOKEN">
<xsd:enumeration value="0">
<xsd:annotation>
<xsd:documentation>New Folder. Creates a new folder where this new grouping is placed.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="1">
<xsd:annotation>
<xsd:documentation>New Namespace. Creates a new namespace where this new grouping is placed.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="2">
<xsd:annotation>
<xsd:documentation>Same. The target parent for the grouping is the nearest common parent of all source query subjects (or dimensions).</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
</xsd:element>
<xsd:sequence minOccurs="0">
<xsd:element name="transformSelection" default="1">
<xsd:annotation>
<xsd:documentation>
<para>The overall behavior of the action changes depending on the value specified for this parameter.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:simpleType>
<xsd:restriction base="xsd:NMTOKEN">
<xsd:enumeration value="0">
<xsd:annotation>
<xsd:documentation>Single. The first source query subject (or dimension) specified is considered a fact, and all other source query subjects (or dimensions) are considered regular dimensions. This affects behavior as follows:
																		<bulletList>
<listElement>If transformType is 1 (Move), the fact gets moved unconditionally.</listElement>
<listElement>If transformTarget is 2 (Same), the grouping is created under the same parent as the fact, rather than the nearest common parent of all source query subjects (or dimensions) specified.</listElement>
<listElement>If the starSchemaGroupingName parameter is not specified and transformTarget is either 0 (New Folder) or 1 (New Namespace), the name of the fact is used as the basis for the name of the folder or namespace being created to contain the grouping.</listElement>
</bulletList>
</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="1">
<xsd:annotation>
<xsd:documentation>Multiple. All query subjects (or dimensions) are treated like dimensions, and behavior does not differ from that described for the other parameters.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
</xsd:element>
<xsd:sequence minOccurs="0">
<xsd:element name="starSchemaGroupName" type="xsd:string">
<xsd:annotation>
<xsd:documentation>
<para>Applicable only if transformType is 0 (New Folder) or 1 (New Namespace). If a name is not specified, a reasonable default is provided.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:sequence>
</xsd:sequence>
</xsd:sequence>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="starGroupingResultObject" type="fmsdk:objectHandle" maxOccurs="unbounded">
<xsd:annotation>
<xsd:documentation>Represents the output result set.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>
<action seq="1" type="TransformCreateStarGrouping">
<inputparams>
<param seq="1" type="handle">
<value>[SQL_GoSales].[PRODUCT]</value>
</param>
<param seq="2" type="handle">
<value>[SQL_GoSales].[ORDERDETAIL]</value>
</param>
<param seq="3" type="handle">
<value>[SQL_GoSales].[PRODUCTFORECAST]</value>
</param>
<param seq="4" type="handle">
<value>[SQL_GoSales].[PRODUCTTYPE]</value>
</param>
<param seq="5" type="integer">
<value>0</value>
</param>
<param seq="6" type="integer">
<value>1</value>
</param>
<param seq="7" type="integer">
<value>0</value>
</param>
</inputparams>
<domchanges/>
<result success="t">
<outputparams/>
</result>
</action>
</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="TransformFunction">
<xsd:annotation>
<xsd:documentation>
<para>RESERVED for future use.</para>
<para>Converts a query subject whose type is "stored procedure unknown" to a function object. This action impacts the model.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="storedProcedureQuerySubject" type="fmsdk:objectHandle">
<xsd:annotation>
<xsd:documentation>Specifies the query subject to transform.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="procParameter" type="fmsdk:propertyHandle">
<xsd:annotation>
<xsd:documentation>
<para>The return parameter of the function (selected by the user).</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="removeSourceQuerySubject">
<xsd:annotation>
<xsd:documentation>Specifies what to do with the source query subject, once the transformation has occurred.</xsd:documentation>
</xsd:annotation>
<xsd:simpleType>
<xsd:restriction base="xsd:NMTOKEN">
<xsd:enumeration value="0">
<xsd:annotation>
<xsd:documentation>Do not remove the source query subject.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="1">
<xsd:annotation>
<xsd:documentation>Remove the source query subject.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="TransformObjectNames">
<xsd:annotation>
<xsd:documentation>
<para>RESERVED for future use.</para>
<para>Converts all underscores, hyphens, and spaces to a single space, capitalizes the first character of each word in the name, and decapitalizes the remainder. For example, "BRANCH_CD" becomes "Branch Cd". This action impacts the model.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:object" maxOccurs="unbounded"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="TransformQueryItemAggregateRule">
<xsd:annotation>
<xsd:documentation>
<para>Determines regular aggregate and semi-aggregate rules for a given set of query items and calculations. This action impacts the model and behaves as follows:</para>
<bulletList>
<listElement>If the data type of the item is either numeric or time interval and its usage is fact:
						<bulletList>
<listElement>if the item is a query item, set both semiAggregate and regularAggregate to sum.</listElement>
<listElement>otherwise (it must be a calculation), set both semiAggregate and regularAggregate to automatic.</listElement>
</bulletList>
</listElement>
<listElement>If the data type of the item is either numeric or time interval but its usage is not fact, set regularAggregate to count and semiAggregate to unsupported.</listElement>
<listElement>If the data type of the item is neither numeric nor time interval, set both regularAggregate and semiAggregate to unsupported.</listElement>
</bulletList>
<para>Note: Not applicable to query items belonging to multidimensional query subjects as their aggregate values are predetermined.</para>
<para>For more information about setting aggregate rules, see the topic "Modifying How Query Items are Aggregated" in the Framework Manager User Guide. </para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:reportItemOrReportItemContainer" maxOccurs="unbounded"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>
<action seq="1" type="TransformQueryItemAggregateRule">
<inputparams>
<param seq="1" type="handle">
<value>[oracle_gosales].[CONVERSIONRATE]</value>
</param>
<param seq="2" type="handle">
<value>[oracle_gosales].[COUNTRY]</value>
</param>
<param seq="3" type="handle">
<value>[oracle_gosales].[EUROCONVERSION]</value>
</param>
<param seq="4" type="handle">
<value>[oracle_gosales].[ORDERDETAIL]</value>
</param>
<param seq="5" type="handle">
<value>[oracle_gosales].[ORDERHEADER]</value>
</param>
<param seq="6" type="handle">
<value>[oracle_gosales].[ORDERMETHOD]</value>
</param>
<param seq="7" type="handle">
<value>[oracle_gosales].[PRODUCT]</value>
</param>
<param seq="8" type="handle">
<value>[oracle_gosales].[PRODUCTFORECAST]</value>
</param>
<param seq="9" type="handle">
<value>[oracle_gosales].[PRODUCTLINE]</value>
</param>
<param seq="10" type="handle">
<value>[oracle_gosales].[PRODUCTTYPE]</value>
</param>
<param seq="11" type="handle">
<value>[oracle_gosales].[RETURNEDITEM]</value>
</param>
<param seq="12" type="handle">
<value>[oracle_gosales].[RETURNREASON]</value>
</param>
<param seq="13" type="handle">
<value>[oracle_gosales].[SALESBRANCH]</value>
</param>
<param seq="14" type="handle">
<value>[oracle_gosales].[SALESSTAFF]</value>
</param>
<param seq="15" type="handle">
<value>[oracle_gosales].[SALESTARGET]</value>
</param>
</inputparams>
<domchanges/>
<result success="t">
<outputparams/>
</result>
</action>
</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="TransformQueryItemUsage">
<xsd:annotation>
<xsd:documentation>
<para>Determines the usage for a specified set of query items and calculations and updates their corresponding usage properties accordingly. This action impacts the model and behaves as follows:</para>
<bulletList>
<listElement>Usage is set to identifier if
						<bulletList>
<listElement>the item participates in a determinant key</listElement>
<listElement>the item is involved in a relationship</listElement>
<listElement>the item is of type date or time</listElement>
</bulletList>
</listElement>
<listElement>Otherwise, usage is set to fact if the item is type numeric.</listElement>
<listElement>Otherwise, usage is set to attribute.</listElement>
</bulletList>
<para>Note: Not applicable to query items belonging to multidimensional query subjects as their usage values are predetermined. </para>
<para>For more information about setting usages, see the topic "Modifying How Query Items are Aggregated" in the Framework Manager User Guide. </para>
<writerComment>This action is invoked explicitly during Determine Usage, implicitly on a database import, or when creating a query subject.</writerComment>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:reportItemOrReportItemContainer" maxOccurs="unbounded"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>
<action seq="1" type="TransformQueryItemUsage">
<inputparams>
<param seq="1" type="handle">
<value>[oracle_gosales].[CONVERSIONRATE]</value>
</param>
<param seq="2" type="handle">
<value>[oracle_gosales].[COUNTRY]</value>
</param>
<param seq="3" type="handle">
<value>[oracle_gosales].[EUROCONVERSION]</value>
</param>
<param seq="4" type="handle">
<value>[oracle_gosales].[ORDERDETAIL]</value>
</param>
<param seq="5" type="handle">
<value>[oracle_gosales].[ORDERHEADER]</value>
</param>
<param seq="6" type="handle">
<value>[oracle_gosales].[ORDERMETHOD]</value>
</param>
<param seq="7" type="handle">
<value>[oracle_gosales].[PRODUCT]</value>
</param>
<param seq="8" type="handle">
<value>[oracle_gosales].[PRODUCTFORECAST]</value>
</param>
<param seq="9" type="handle">
<value>[oracle_gosales].[PRODUCTLINE]</value>
</param>
<param seq="10" type="handle">
<value>[oracle_gosales].[PRODUCTTYPE]</value>
</param>
<param seq="11" type="handle">
<value>[oracle_gosales].[RETURNEDITEM]</value>
</param>
<param seq="12" type="handle">
<value>[oracle_gosales].[RETURNREASON]</value>
</param>
<param seq="13" type="handle">
<value>[oracle_gosales].[SALESBRANCH]</value>
</param>
<param seq="14" type="handle">
<value>[oracle_gosales].[SALESSTAFF]</value>
</param>
<param seq="15" type="handle">
<value>[oracle_gosales].[SALESTARGET]</value>
</param>
</inputparams>
<domchanges/>
<result success="t">
<outputparams/>
</result>
</action>
</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="TransformRelationship">
<xsd:annotation>
<xsd:documentation>
<para>Generates relationships among selected query subjects, between each of them and all other existing query subjects, or both. Also determines how to generate joins using primary and foreign keys, unique indexes, matching query item names, or all of the above, and cardinality (inner or outer joins). This action impacts the model.</para>
<writerComment>This action is invoked during a database import or a Detect relationships. Please see details in "FM Relationship Transformations.doc".</writerComment>
<para>Note: Not applicable to models based on SAP BW data sources.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:querySubject" maxOccurs="unbounded"/>
<xsd:element ref="fmsdk:joinOptionProcessExternalJoins"/>
<xsd:element ref="fmsdk:joinOptionProcessInternalJoins"/>
<xsd:element ref="fmsdk:joinOptionProcessKeys"/>
<xsd:element ref="fmsdk:joinOptionProcessMatchingIndexColumns"/>
<xsd:element ref="fmsdk:joinOptionProcessMatchingQueryItemNames"/>
<xsd:element ref="fmsdk:joinOptionProcessOuterJoinOption"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>
<action seq="1" type="TransformRelationship">
<inputparams>
<param seq="1" type="handle">
<value>[oracle_gosales].[SALESBRANCH]</value>
</param>
<param seq="2" type="handle">
<value>[oracle_gosales].[COUNTRY]</value>
</param>
<param seq="3" type="integer">
<value>0</value>
</param>
<param seq="4" type="integer">
<value>1</value>
</param>
<param seq="5" type="integer">
<value>1</value>
</param>
<param seq="6" type="integer">
<value>0</value>
</param>
<param seq="7" type="integer">
<value>0</value>
</param>
<param seq="8" type="integer">
<value>0</value>
</param>
</inputparams>
<domchanges/>
<result success="t">
<outputparams/>
</result>
</action>
</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="TranslateReference">
<xsd:annotation>
<xsd:documentation>
<para>Takes in an object reference in any locale, looks up the object, and returns a corresponding reference in a specified target locale. If the object cannot be found, the source reference that was passed originally is returned.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="sourceReference" type="fmsdk:objectReference">
<xsd:annotation>
<xsd:documentation>Specifies the input object reference.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element ref="fmsdk:modelLocale"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence maxOccurs="unbounded">
<xsd:element name="translatedReference" type="fmsdk:objectReference">
<xsd:annotation>
<xsd:documentation>Represents the returned object reference. It is the source object reference, if the required reference could not be found.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="UseContentManager4Authentication">
<xsd:annotation>
<xsd:documentation>
<para>RESERVED for internal use. </para>
<para>Determines whether Framework Manager is using Cognos 10 or nsgeneral.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="authenticationSource">
<xsd:annotation>
<xsd:documentation>Represents the returned value.</xsd:documentation>
</xsd:annotation>
<xsd:simpleType>
<xsd:restriction base="xsd:NMTOKEN">
<xsd:enumeration value="0">
<xsd:annotation>
<xsd:documentation>Cognos 10 is not being used (nsgeneral).</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="1">
<xsd:annotation>
<xsd:documentation>Cognos 10 is being used.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="Verify">
<xsd:annotation>
<xsd:documentation>Reports any non-intuitive behavior that will result from executing some action, without actually executing the action. If any non-intuitive behavior is found, it is reported by throwing an exception with a severity of warning. Takes in the same set of inputs that would normally be passed into the action being verified. The actions that can be verified include Delete, Move, Modify, and Publish.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:choice>
<xsd:sequence>
<xsd:element name="verifyCreateID" type="xsd:nonNegativeInteger" fixed="2">
<xsd:annotation>
<xsd:documentation>Identifies that a Create action is being verified, and checks whether the name specified for the object conflicts with that of an existing object, and whether or not the value specified for the nameConflictOptionCreate parameter is 0.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:group ref="fmsdk:inputParamsCreate"/>
</xsd:sequence>
<xsd:sequence>
<xsd:element name="verifyDeleteID" type="xsd:nonNegativeInteger" fixed="4">
<xsd:annotation>
<xsd:documentation>
<para>Identifies that the Delete action is being verified, and checks the following:</para>
<bulletList>
<listElement>If the object being deleted is the name of a parameter map, a general warning is issued stating that all references to any of its child parameter map entries are no longer valid.</listElement>
<listElement>Any object referencing any other type of object being removed will be deleted or invalidated due to the cascaded delete rules as described for the Delete action.</listElement>
</bulletList>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:group ref="fmsdk:inputParamsDelete"/>
</xsd:sequence>
<xsd:sequence>
<xsd:element name="verifyModifyID" type="xsd:nonNegativeInteger" fixed="8">
<xsd:annotation>
<xsd:documentation>
<para>Identifies that the Modify action is being verified, and checks the following:</para>
<bulletList>
<listElement>If the property being modified is the secured property of an object, this modification resets all other security settings on the object. For example, its entry is removed from any role-based package that contains it.</listElement>
<listElement>If the property being modified is a query subject definition modified in such a way that one or more of its query item(s) is removed and thus impacts any objects referencing those query items in the same manner as specified for VerifyDelete.</listElement>
</bulletList>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:group ref="fmsdk:inputParamsModify"/>
</xsd:sequence>
<xsd:sequence>
<xsd:element name="verifyMoveID" type="xsd:nonNegativeInteger" fixed="6">
<xsd:annotation>
<xsd:documentation>
<para>Identifies that the Move action is being verified, and checks the following:</para>
<bulletList>
<listElement>If the name of an object being moved conflicts with that of another that already exists in the target, the name of the object is made unique by appending a sequence number to it. For more information, see Move.</listElement>
<listElement>If the object being moved is a relationship, checks that
																<bulletList>
<listElement>one or both of its ends is not specified to be moved but still needs to be implicitly moved in order to ensure that the relationship still exists in the nearest common ancestor of its two ends,</listElement>
<listElement>the end that needs to be implicitly moved does not currently reside in the same folder or namespace as the relationship being moved.</listElement>
</bulletList>
</listElement>
</bulletList>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:group ref="fmsdk:inputParamsMove"/>
</xsd:sequence>
<xsd:sequence>
<xsd:element name="verifyPublishID" type="xsd:nonNegativeInteger" fixed="10">
<xsd:annotation>
<xsd:documentation>
<para>Identifies that the Publish action is being verified, and checks</para>
<bulletList>
<listElement>If the package is being re-published to Cognos 10 and, in Framework Manager, it has an empty admin access list, then if it is re-published, no one else can administer (re-publish) it other than the current Framework Manager user.</listElement>
</bulletList>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:group ref="fmsdk:inputParamsPublish"/>
</xsd:sequence>
<xsd:sequence>
<xsd:element name="verifyImportTranslationsID" type="xsd:nonNegativeInteger" fixed="56">
<xsd:annotation>
<xsd:documentation>
<para>Identifies that the ImportTranslations action is being verified, in which case the header record of the specified translations file is checked against both the key locale and target locales specified in the action. The key locale must be present in the header record as well as at least one of the target locales, otherwise an error is issued. A warning is issued if there are no errors but some of the target locales are missing in the header record.
													</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:group ref="fmsdk:inputParamsImportTranslations"/>
</xsd:sequence>
</xsd:choice>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>
<action seq="2" type="Verify">
<inputparams>
<param seq="1" type="integer">
<value>10</value>
</param>
<param seq="1" type="handle">
<value>[New Namespace]</value>
</param>
<param seq="2" type="handle">
<value>[SQL_GoSales].[CONVERSIONRATE]</value>
</param>
<param seq="3" type="handle">
<value>[SQL_GoSales].[COUNTRY]</value>
</param>
<param seq="4" type="handle">
<value>[SQL_GoSales].[EUROCONVERSION]</value>
</param>
</inputparams>
<domchanges/>
<result success="t">
<outputparams/>
</result>
</action>
</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="VerifyCMAuthentication">
<xsd:annotation>
<xsd:documentation>
<para>Ensures that the currently established Cognos 10 session has not expired. If it has expired, an exception is thrown.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>Not yet available for this action.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="objectAccess" type="fmsdk:node">
<xsd:annotation>
<xsd:documentation>Specifies the security for the object.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="externalizeRootDirectory" type="xsd:string">
<xsd:annotation>
<xsd:documentation>
<para>Specifies the root directory for the files generated as the result of query subject externalization.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="externalizeReport" type="fmsdk:node">
<xsd:annotation>
<xsd:documentation>
<para>Provides a summary report of query subjects that were externalized. The report conforms to externalizeReport.xsd.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="externalizeQuerySubject">
<xsd:annotation>
<xsd:documentation>
<para>Externalizes given query subjects according to their specified externalization method. It also does the auto summary during externalize if the "Externalize Auto Summary" property is set to (true). The model path is used only when this action is called as part of the publish action.</para>
<writerComment>(more details about query subject externalization can be found in the supporting document for CR0348 and CR0349 "MRG016, Externalize Query Subject.doc"</writerComment>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:externalizeRootDirectory"/>
<xsd:sequence maxOccurs="unbounded">
<xsd:element ref="fmsdk:querySubject"/>
</xsd:sequence>
<xsd:element ref="fmsdk:modelPath" minOccurs="0"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence minOccurs="0">
<xsd:element ref="fmsdk:externalizeReport" minOccurs="0"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="storedProcedureOptionThrowExceptionOption" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>
<para>Specifies if an exception should be thrown when the first procedure cannot be imported (a value of 0 means no exception). This is an optional parameter. When there is no such parameter, the default behavior is that no exception will be thrown.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="displaySummaryMessageOption" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>
<para>Specifies if displaying a summary message is required (a value of 0 means no display). The message is displayed by means of a warning exception. This is an optional parameter. If there is no such parameter, the default behavior is to display the summary message at the end of the import.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="CloseQueryServicesConnection">
<xsd:annotation>
<xsd:documentation>
<para>RESERVED for internal use.</para>
<para>Terminates the connection to the query services that is cached during a session.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="GetAllPackages">
<xsd:annotation>
<xsd:documentation>
<para>Returns a list of published packages visible to the current user.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:element name="outputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="packagesReport" type="fmsdk:node">
<xsd:annotation>
<xsd:documentation>
<para>An XML document conforming to packagesReport.xsd.</para>
</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="EvaluateObject">
<xsd:annotation>
<xsd:documentation>Evaluates the definition of each input parameter. To do so, it sends a request based on each input object to the query providers. It sets the status of each input object to valid if no error is detected, or invalid if there are errors in the definition. This action is useful when the definition of the input objects is updated. An update changes the status of the object to needsReevaluation.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence maxOccurs="unbounded">
<xsd:element name="evaluateObject">
<xsd:annotation>
<xsd:documentation>A query subject, dimension or relationship. </xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="UpdateQuerySubject">
<xsd:annotation>
<xsd:documentation>Executes the definition of each input query subject and synchronizes the query items with the projection list returned from the query. The list of updated query subjects is also returned.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence maxOccurs="unbounded">
<xsd:element ref="fmsdk:querySubject"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="outputParams" minOccurs="0">
<xsd:complexType>
<xsd:sequence minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="fmsdk:querySubject"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="DoDependencyAnalysis">
<xsd:annotation>
<xsd:documentation>
<para>Recursively analyzes the dependencies of objects on a selected object, using object references.</para>
<para>If the selected object is a Datasource, a QuerySubject, or a Dimension, the impacted objects may include the followings.</para>
<bulletList>
<listElement>Stand-alone Filter and Calculation</listElement>
<listElement>Shortcut</listElement>
<listElement>Relationship and RelationshipShortcut</listElement>
<listElement>Query subject and Dimension (containing impacted calculations and embedded filters)</listElement>
</bulletList>
<para>If the selected object is a Query Item, a Calculation, or a Filter, the impacted objects may include the followings.</para>
<bulletList>
<listElement>Stand-alone Filter and Calculation</listElement>
<listElement>Embedded Filter</listElement>
<listElement>Determinant</listElement>
<listElement>Query Item</listElement>
<listElement>Relationship and RelationshipShortcut</listElement>
</bulletList>
<para>The following objects are considered as containers, and have no direct impact on other objects: Hierarchy, Level, Folder, and Namespace. A container should be expanded to object levels in order to extract the dependent objects as described above.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="selectedObject" type="fmsdk:objectHandle"/>
<xsd:element name="dependencyLevel" type="xsd:integer">
<xsd:annotation>
<xsd:documentation>Indicates the desired level of dependencies. For example, dependencyLevel = 1 means to retrieve only objects that directly depend on the selected object. Setting dependencyLevel = 2 means to also retrieve objects that directly depend on objects on level 1. A level of 0 means to retrieve all levels of dependencies.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="outputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element ref="fmsdk:dependencySpec"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>
<action seq="1" type="DoDependencyAnalysis">
<inputparams>
<param seq="1" type="handle">
<value>[msgosales].[CONVERSIONRATE]</value>
</param>
<param seq="2" type="integer">
<value>0</value>
</param>
</inputparams>
<domchanges/>
<result success="t">
<outputparams>
<item>
<item Name="COUNTRY &lt;--&gt; CONVERSIONRATE" Type="relationship" uniqueName="[msgosales].[COUNTRY &lt;--&gt; CONVERSIONRATE]"/>
<item Name="Shortcut to CONVERSIONRATE" Type="shortcut" uniqueName="[msgosales].[Shortcut to CONVERSIONRATE]"/>
<item Name="CONVERSIONRATE_CONVERSIONRATE" Type="querySubject" uniqueName="[msgosales].[CONVERSIONRATE_CONVERSIONRATE]">
<!-- the following relationship is at level 2-->
<item Name="COUNTRY &lt;--&gt; CONVERSIONRATE1" Type="relationship" uniqueName="[msgosales].[COUNTRY &lt;--&gt; CONVERSIONRATE1]"/>
</item>
</item>
</outputparams>
</result>
</action>
</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="DynamicImportPublish">
<xsd:annotation>
<xsd:documentation>
<para> This action calls three other actions in sequence: DynamicImport, CreateDynamicPackage, and Publish. </para>
<para> The first action performs a light-weight mport of an OLAP datasource, such as DB2Olap (DO), Powercube (PC), Microsoft SQLServer Analysis (MO), Cognos Finance (CL), or Cognos Planning (CR). </para>
<para> The second action creates a package in the light-weight model. This dynamic package contains an ImportSpec that will be used for the actual import when the package, after being published, is expanded in the Studios. </para>
<para> The third action publishes the dynamic package to the Content Manager. It overwrites an existing package with the same name, and sets the Security view to the Everyone role, i.e. allowing everyone accessing the package.</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:group ref="fmsdk:inputParamsDynamicImportPublish"/>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="sampleLogEntry" type="xsd:anySimpleType" use="prohibited">
<xsd:annotation>
<xsd:documentation>
<action seq="1" type="DynamicImportPublish">
<inputparams>
<param seq="1" type="i18nstring">
<value>db2olap</value>
</param>
<param seq="2" type="i18nstring">
<value>db2olap_package</value>
</param>
<param seq="3" type="i18nstring">
<value>Sample</value>
</param>
<param seq="4" type="i18nstring">
<value>Basic</value>
</param>
<param seq="5" type="stringCollection">
<value>&lt;stringCollection&gt;&lt;item&gt;en&lt;/item&gt;&lt;item&gt;fr&lt;/item&gt;&lt;item&gt;de&lt;/item&gt;&lt;/stringCollection&gt;</value>
</param>
<param seq="6" type="stringCollection">
<value>&lt;stringCollection&gt;&lt;item&gt;Default&lt;/item&gt;&lt;item&gt;Long Names&lt;/item&gt;&lt;item&gt;Long Names&lt;/item&gt;&lt;/stringCollection&gt;</value>
</param>
</inputparams>
<domchanges/>
<result success="t">
<outputparams/>
</result>
</action>
</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
<xsd:element name="CreateRemainingRelationships">
<xsd:annotation>
<xsd:documentation>
<para>If the end of the input relationship is a model query that has no relationships with other query subjects but its referenced query subjects have some relationships, the action will generate all these relationships for the end. For example, the end Q1 is a model query referencing query subject Q2, which has a relationship to Q3. This action will create a relationship from Q1 to Q3.
</para>
</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:complexContent>
<xsd:extension base="fmsdk:action">
<xsd:sequence>
<xsd:element name="inputParams">
<xsd:complexType>
<xsd:sequence>
<xsd:element name="Relationship" type="fmsdk:objectHandle">
<xsd:annotation>
<xsd:documentation>Specifies the relationship that has an end that needs all remaining relationships from its referenced query subjects.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
</xsd:element>
</xsd:schema>
